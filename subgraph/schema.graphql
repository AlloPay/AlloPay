type Safe @entity {
  "{address}"
  id: ID!
  groups: [Group!]! @derivedFrom(field: "safe")
  deposits: [Deposit!]! @derivedFrom(field: "safe")
  transactions: [Transaction!]! @derivedFrom(field: "safe")
  tokenTransfers: [TokenTransfer!]! @derivedFrom(field: "safe")
  # tokenTransferApprovals: [TokenTransferApproval!]! @derivedFrom(field: "safe")
}

type Approver @entity {
  "{address}"
  id: ID!
  groups: [GroupApprover!]! @derivedFrom(field: "approver")
  transactions: [TransactionApprover!]! @derivedFrom(field: "approver")
}

type Group @entity {
  "{safe.id}-{hash}"
  id: ID!
  safe: Safe!
  hash: Bytes!
  active: Boolean!
  approvers: [GroupApprover!]! @derivedFrom(field: "group")
  transactions: [Transaction!]! @derivedFrom(field: "group")
}

type GroupApprover @entity {
  "{group.id}-{approver.id}"
  id: ID! # safe-group.hash-approver.id
  group: Group!
  approver: Approver!
  weight: BigInt!
}

type Deposit @entity {
  "{tx.hash}-{tx.log.index}"
  id: ID!
  safe: Safe!
  from: Bytes!
  value: BigInt!
  blockHash: Bytes!
  timestamp: BigInt!
}

type Transaction @entity {
  "{EIP712_hash(txData)}"
  id: ID!
  safe: Safe!
  # Inputs
  to: Bytes!
  value: BigInt!
  data: Bytes!
  nonce: BigInt!
  # Output
  response: Bytes!
  # Metadata
  executor: Bytes!
  blockHash: Bytes!
  timestamp: BigInt!
  # Relationships
  group: Group!
  approvers: [TransactionApprover!]! @derivedFrom(field: "transaction")
}

type TransactionApprover @entity {
  "{transaction.id}-{approver.id}"
  id: ID!
  transaction: Transaction!
  approver: Approver!
}

###### ERC20 ######
# type Token @entity {
#   "{address}"
#   id: ID!
#   name: String
#   symbol: String
#   decimals: BigInt
#   totalSupply: BigInt
#   transfers: [TokenTransfer!]! @derivedFrom(field: "token")
# }

enum TokenTransferType {
  IN
  OUT
}

type TokenTransfer @entity {
  "{tx.hash}-{tx.log.index}"
  id: ID!
  token: Bytes!
  safe: Safe!
  type: TokenTransferType!
  timestamp: BigInt!
  from: Bytes!
  to: Bytes!
  value: BigInt!
}

# type TokenTransferApproval @entity {
#   "{tx.hash}-{tx.log.index}"
#   id: ID!
#   # token: Token!
#   token: Bytes!
#   safe: Safe!
#   type: String!
#   owner: Bytes!
#   spender: Bytes!
#   value: BigInt!
# }
