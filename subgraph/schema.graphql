type Safe @entity {
  "{address}"
  id: ID!
  impl: SafeImpl!
  txs: [Tx!]! @derivedFrom(field: "safe")
  accounts: [Account!]! @derivedFrom(field: "safe")
  transfers: [Transfer!]! @derivedFrom(field: "safe")
}

type SafeImpl @entity {
  "{address}"
  id: ID!
  blockHash: Bytes!
  timestamp: BigInt!
  proxies: [Safe!]! @derivedFrom(field: "impl")
}

type Tx @entity {
  "{tx.hash}"
  id: ID!
  safe: Safe!
  hash: Bytes!
  success: Boolean!
  response: Bytes!
  # Metadata
  executor: Bytes!
  blockHash: Bytes!
  timestamp: BigInt!
  transfers: [Transfer!]! @derivedFrom(field: "tx")
}

type User @entity {
  "{address}"
  id: ID!
  quorums: [Quorum!]! @derivedFrom(field: "approvers")
  # TODO: accounts: [Account!]! @derivedFrom(field: "users")
}

type Account @entity {
  "{safe.id}-{hash}"
  id: ID!
  safe: Safe!
  ref: Bytes!
  active: Boolean!
  quorums: [Quorum!]! @derivedFrom(field: "account")
  # TODO: users: [User!]!
}

type Quorum @entity {
  "{account.id}-{hash}"
  id: ID!
  hash: Bytes!
  account: Account!
  approvers: [User!]!
  active: Boolean!
  blockHash: Bytes!
  timestamp: BigInt!
}

# type QuorumApprover @entity {
#   "{quorum.id}-${approver.id}"
#   id: ID!
#   quorum: Quorum!
#   approver: Approver!
# }

type Transfer @entity {
  "{tx.id}-{tx.log.index}"
  id: ID!
  safe: Safe!
  tx: Tx
  txHash: Bytes!
  token: Bytes!
  type: TransferType!
  from: Bytes!
  to: Bytes!
  value: BigInt!
  # Metadata
  blockHash: Bytes!
  timestamp: BigInt!
}

enum TransferType {
  IN
  OUT
}

# type TokenTransferApproval @entity {
#   "{tx.hash}-{tx.log.index}"
#   id: ID!
#   # token: Token!
#   token: Bytes!
#   safe: Safe!
#   type: String!
#   owner: Bytes!
#   spender: Bytes!
#   value: BigInt!
# }
