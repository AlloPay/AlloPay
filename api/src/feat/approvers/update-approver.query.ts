// GENERATED by @edgedb/generate v0.5.3

import type {Executor} from "edgedb";

export type UpdateApproverArgs = {
  readonly "address": string;
  readonly "name"?: string | null;
  readonly "pushToken"?: string | null;
  readonly "bluetoothDevices"?: ReadonlyArray<string> | null;
  readonly "cloud"?: {
    readonly "provider": ("Apple" | "Google");
    readonly "subject": string;
  } | null;
};

export type UpdateApproverReturns = {
  "id": string;
};

export function updateApprover(client: Executor, args: UpdateApproverArgs): Promise<UpdateApproverReturns> {
  return client.queryRequiredSingle(`\
with address := <Address>$address,
     name := <optional str>$name,
     pushToken := <optional str>$pushToken,
     bluetoothDevices := <optional array<MAC>>$bluetoothDevices,
     cloud := <optional tuple<provider: CloudProvider, subject: str>>$cloud,
     approver := (insert Approver { address := address } unless conflict on .address else Approver)
insert ApproverDetails {
  approver := approver,
  name := name,
  pushToken := pushToken,
  bluetoothDevices := bluetoothDevices,
  cloud := cloud
} unless conflict on .approver else (
  update ApproverDetails set {
    name := name,
    pushToken := pushToken,
    bluetoothDevices := bluetoothDevices,
    cloud := cloud
  }
)`, args);

}
