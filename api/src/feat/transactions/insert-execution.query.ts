// GENERATED by @edgedb/generate v0.5.4

import type {Executor} from "edgedb";

export type InsertExecutionArgs = {
  readonly "proposal": string;
  readonly "hash": string;
  readonly "maxEthFeePerGas": string;
  readonly "ethPerFeeToken": string;
  readonly "usdPerFeeToken": string;
  readonly "response": string;
  readonly "gasUsed": string;
  readonly "timestamp"?: Date | null;
};

export type InsertExecutionReturns = {
  "id": string;
};

export function insertExecution(client: Executor, args: InsertExecutionArgs): Promise<InsertExecutionReturns> {
  return client.queryRequiredSingle(`\
with transaction := (select Transaction filter .id = <uuid>$proposal),
     systx := (
       insert SystemTx {
         hash := <Bytes32>$hash,
         proposal := transaction,
         maxEthFeePerGas := <decimal>$maxEthFeePerGas,
         ethPerFeeToken := <decimal>$ethPerFeeToken,
         usdPerFeeToken := <decimal>$usdPerFeeToken
       }
     )
insert OptimisticSuccess {
  transaction := transaction,
  systx := systx,
  response := <Bytes>$response,    # transaction.result[is Simulation].response
  gasUsed := <bigint><str>$gasUsed,
  timestamp := <optional datetime>$timestamp
}`, args);

}
