// GENERATED by @edgedb/generate v0.5.3

import type {Executor} from "edgedb";

export type RejectProposalArgs = {
  readonly "proposal": string;
};

export type RejectProposalReturns = {
  "rejection": {
    "id": string;
  };
  "proposal": {
    "id": string;
    "account": {
      "address": string;
    };
  } | null;
};

export function rejectProposal(client: Executor, args: RejectProposalArgs): Promise<RejectProposalReturns> {
  return client.queryRequiredSingle(`\
with proposal := (select Proposal filter .id = <uuid>$proposal),
     deletedResponse := (delete ProposalResponse filter .proposal = proposal and .approver = global current_approver)

select {
  rejection := (
    insert Rejection {
      proposal := proposal
    }
  ),
  proposal := (
    id := proposal.id,
    account := { address := proposal.account.address }
  )
}`, args);

}
