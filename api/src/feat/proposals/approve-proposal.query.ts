// GENERATED by @edgedb/generate v0.5.3

import type {Executor} from "edgedb";

export type ApproveProposalArgs = {
  readonly "proposal": string;
  readonly "approver": string;
  readonly "signature": string;
};

export type ApproveProposalReturns = {
  "id": string;
};

export function approveProposal(client: Executor, args: ApproveProposalArgs): Promise<ApproveProposalReturns> {
  return client.queryRequiredSingle(`\
with proposal := (select Proposal filter .id = <uuid>$proposal),
     approver := (select Approver filter .address = <UAddress>$approver),
     deletedResponse := (delete ProposalResponse filter .proposal = proposal and .approver = approver)
insert Approval {
  proposal := proposal,
  approver := approver,
  signedHash := proposal.hash,
  signature := <Bytes>$signature
}`, args);

}
