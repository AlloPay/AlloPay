// GENERATED by @edgedb/generate v0.3.3

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
export type $AbiSource = {
  "Verified": $.$expr_Literal<$AbiSource>;
} & $.EnumType<"default::AbiSource", ["Verified"]>;
const AbiSource: $AbiSource = $.makeType<$AbiSource>(_.spec, "43d863d2-3036-11ee-97ee-2b9e1be80120", _.syntax.literal);

export type $Address = $.ScalarType<"std::str", string>;
const Address: $.scalarTypeWithConstructor<_std.$str, never> = $.makeType<$.scalarTypeWithConstructor<_std.$str, never>>(_.spec, "405d621b-3036-11ee-b6d7-590684333403", _.syntax.literal);

export type $Bytes = $.ScalarType<"std::str", string>;
const Bytes: $.scalarTypeWithConstructor<_std.$str, never> = $.makeType<$.scalarTypeWithConstructor<_std.$str, never>>(_.spec, "4059e86e-3036-11ee-ba0d-e521ce22b9af", _.syntax.literal);

export type $Bytes32 = $.ScalarType<"std::str", string>;
const Bytes32: $.scalarTypeWithConstructor<_std.$str, never> = $.makeType<$.scalarTypeWithConstructor<_std.$str, never>>(_.spec, "41661714-3036-11ee-a231-f185ae01b521", _.syntax.literal);

export type $Bytes4 = $.ScalarType<"std::str", string>;
const Bytes4: $.scalarTypeWithConstructor<_std.$str, never> = $.makeType<$.scalarTypeWithConstructor<_std.$str, never>>(_.spec, "406992d9-3036-11ee-9026-353b5906665a", _.syntax.literal);

export type $Label = $.ScalarType<"std::str", string>;
const Label: $.scalarTypeWithConstructor<_std.$str, never> = $.makeType<$.scalarTypeWithConstructor<_std.$str, never>>(_.spec, "406f6fa2-3036-11ee-bb43-99e6a80d771e", _.syntax.literal);

export type $MAC = $.ScalarType<"std::str", string>;
const MAC: $.scalarTypeWithConstructor<_std.$str, never> = $.makeType<$.scalarTypeWithConstructor<_std.$str, never>>(_.spec, "a17b2cae-3441-11ee-bddf-894b796ebe63", _.syntax.literal);

export type $TransactionProposalStatus = {
  "Pending": $.$expr_Literal<$TransactionProposalStatus>;
  "Executing": $.$expr_Literal<$TransactionProposalStatus>;
  "Successful": $.$expr_Literal<$TransactionProposalStatus>;
  "Failed": $.$expr_Literal<$TransactionProposalStatus>;
} & $.EnumType<"default::TransactionProposalStatus", ["Pending", "Executing", "Successful", "Failed"]>;
const TransactionProposalStatus: $TransactionProposalStatus = $.makeType<$TransactionProposalStatus>(_.spec, "41aa1e81-3036-11ee-ad97-057d0f6cbc62", _.syntax.literal);

export type $TransferDirection = {
  "In": $.$expr_Literal<$TransferDirection>;
  "Out": $.$expr_Literal<$TransferDirection>;
} & $.EnumType<"default::TransferDirection", ["In", "Out"]>;
const TransferDirection: $TransferDirection = $.makeType<$TransferDirection>(_.spec, "42439950-3036-11ee-9422-5751f944f55b", _.syntax.literal);

export type $current_user_accounts = $.ScalarType<"std::uuid", string>;
const current_user_accounts: $.scalarTypeWithConstructor<_std.$uuid, never> = $.makeType<$.scalarTypeWithConstructor<_std.$uuid, never>>(_.spec, "405d4747-3036-11ee-99a5-0f7ec6101fdb", _.syntax.literal);

export type $uint16 = $.ScalarType<"std::number", number>;
const uint16: $.scalarTypeWithConstructor<_std.$number, string> = $.makeType<$.scalarTypeWithConstructor<_std.$number, string>>(_.spec, "42982cac-3036-11ee-bfb8-f1c8dd663eb8", _.syntax.literal);

export type $uint224 = $.ScalarType<"std::bigint", bigint>;
const uint224: $.scalarTypeWithConstructor<_std.$bigint, never> = $.makeType<$.scalarTypeWithConstructor<_std.$bigint, never>>(_.spec, "42b2c56e-3036-11ee-93ed-ef7d4fed2747", _.syntax.literal);

export type $uint256 = $.ScalarType<"std::bigint", bigint>;
const uint256: $.scalarTypeWithConstructor<_std.$bigint, never> = $.makeType<$.scalarTypeWithConstructor<_std.$bigint, never>>(_.spec, "4184f313-3036-11ee-af62-abc9008f8bcb", _.syntax.literal);

export type $uint32 = $.ScalarType<"std::number", number>;
const uint32: $.scalarTypeWithConstructor<_std.$number, string> = $.makeType<$.scalarTypeWithConstructor<_std.$number, string>>(_.spec, "42329cc4-3036-11ee-8c66-cbd58f82d071", _.syntax.literal);

export type $uint64 = $.ScalarType<"std::bigint", bigint>;
const uint64: $.scalarTypeWithConstructor<_std.$bigint, never> = $.makeType<$.scalarTypeWithConstructor<_std.$bigint, never>>(_.spec, "41aa34b9-3036-11ee-99df-c17d5874dfa7", _.syntax.literal);

export type $AccountλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "address": $.PropertyDesc<$Address, $.Cardinality.One, true, false, true, false>;
  "implementation": $.PropertyDesc<$Address, $.Cardinality.One, false, false, false, false>;
  "isActive": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, false>;
  "name": $.PropertyDesc<$Label, $.Cardinality.One, false, false, false, false>;
  "salt": $.PropertyDesc<$Bytes32, $.Cardinality.One, false, false, false, false>;
  "approvers": $.LinkDesc<$Approver, $.Cardinality.Many, {}, false, true,  false, false>;
  "proposals": $.LinkDesc<$Proposal, $.Cardinality.Many, {}, false, true,  false, false>;
  "transactionProposals": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, true,  false, false>;
  "transfers": $.LinkDesc<$Transfer, $.Cardinality.Many, {}, false, true,  false, false>;
  "policies": $.LinkDesc<$Policy, $.Cardinality.Many, {}, false, true,  false, false>;
  "<account[is TransferApproval]": $.LinkDesc<$TransferApproval, $.Cardinality.Many, {}, false, false,  false, false>;
  "<account[is Proposal]": $.LinkDesc<$Proposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<account[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<account[is Event]": $.LinkDesc<$Event, $.Cardinality.Many, {}, false, false,  false, false>;
  "<account[is TransferDetails]": $.LinkDesc<$TransferDetails, $.Cardinality.Many, {}, false, false,  false, false>;
  "<account[is Transferlike]": $.LinkDesc<$Transferlike, $.Cardinality.Many, {}, false, false,  false, false>;
  "<account[is Transfer]": $.LinkDesc<$Transfer, $.Cardinality.Many, {}, false, false,  false, false>;
  "<account[is Policy]": $.LinkDesc<$Policy, $.Cardinality.Many, {}, false, false,  false, false>;
  "<accounts[is Approver]": $.LinkDesc<$Approver, $.Cardinality.Many, {}, false, false,  false, false>;
  "<accounts[is current_approver]": $.LinkDesc<$current_approver, $.Cardinality.Many, {}, false, false,  false, false>;
  "<accounts[is User]": $.LinkDesc<$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<accounts[is current_user]": $.LinkDesc<$current_user, $.Cardinality.Many, {}, false, false,  false, false>;
  "<account[is MessageProposal]": $.LinkDesc<$MessageProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<account": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<accounts": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Account = $.ObjectType<"default::Account", $AccountλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
  {address: {__element__: $Address, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Account = $.makeType<$Account>(_.spec, "42032769-3036-11ee-9fe3-338b08c62ccf", _.syntax.literal);

const Account: $.$expr_PathNode<$.TypeSet<$Account, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Account, $.Cardinality.Many), null);

export type $ProposalResponseλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "approver": $.LinkDesc<$Approver, $.Cardinality.One, {}, false, false,  false, true>;
  "proposal": $.LinkDesc<$Proposal, $.Cardinality.One, {}, false, false,  false, false>;
  "createdAt": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, true, true>;
  "<responses[is Proposal]": $.LinkDesc<$Proposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<responses[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<responses[is MessageProposal]": $.LinkDesc<$MessageProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<responses": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $ProposalResponse = $.ObjectType<"default::ProposalResponse", $ProposalResponseλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
  {proposal: {__element__: $Proposal, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },approver: {__element__: $Approver, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $ProposalResponse = $.makeType<$ProposalResponse>(_.spec, "40e715f3-3036-11ee-b23c-35b1083cb8b6", _.syntax.literal);

const ProposalResponse: $.$expr_PathNode<$.TypeSet<$ProposalResponse, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($ProposalResponse, $.Cardinality.Many), null);

export type $ApprovalλShape = $.typeutil.flatten<$ProposalResponseλShape & {
  "signature": $.PropertyDesc<$Bytes, $.Cardinality.One, false, false, false, false>;
  "<approvals[is Proposal]": $.LinkDesc<$Proposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approvals[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approvals[is MessageProposal]": $.LinkDesc<$MessageProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approvals": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Approval = $.ObjectType<"default::Approval", $ApprovalλShape, null, [
  ...$ProposalResponse['__exclusives__'],
]>;
const $Approval = $.makeType<$Approval>(_.spec, "410d9789-3036-11ee-a283-d937db4abf70", _.syntax.literal);

const Approval: $.$expr_PathNode<$.TypeSet<$Approval, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Approval, $.Cardinality.Many), null);

export type $ApproverλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "address": $.PropertyDesc<$Address, $.Cardinality.One, true, false, true, false>;
  "name": $.PropertyDesc<$Label, $.Cardinality.AtMostOne, false, false, false, false>;
  "pushToken": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "user": $.LinkDesc<$User, $.Cardinality.One, {}, false, false,  false, true>;
  "accounts": $.LinkDesc<$Account, $.Cardinality.Many, {}, false, true,  false, false>;
  "contact": $.LinkDesc<$Contact, $.Cardinality.AtMostOne, {}, false, true,  false, false>;
  "label": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, true, false, false>;
  "bluetoothDevices": $.PropertyDesc<$.ArrayType<$MAC>, $.Cardinality.AtMostOne, false, false, false, false>;
  "<approvers[is User]": $.LinkDesc<$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approvers[is current_user]": $.LinkDesc<$current_user, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approver[is ProposalResponse]": $.LinkDesc<$ProposalResponse, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approver[is Approval]": $.LinkDesc<$Approval, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approver[is Rejection]": $.LinkDesc<$Rejection, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposedBy[is Proposal]": $.LinkDesc<$Proposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposedBy[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approvers[is PolicyState]": $.LinkDesc<$PolicyState, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approvers[is Account]": $.LinkDesc<$Account, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposedBy[is MessageProposal]": $.LinkDesc<$MessageProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approver": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approvers": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposedBy": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Approver = $.ObjectType<"default::Approver", $ApproverλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
  {user: {__element__: $User, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },name: {__element__: $Label, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {user: {__element__: $User, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },address: {__element__: $Address, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {address: {__element__: $Address, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Approver = $.makeType<$Approver>(_.spec, "40768c61-3036-11ee-bfb8-bbe2f36650e1", _.syntax.literal);

const Approver: $.$expr_PathNode<$.TypeSet<$Approver, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Approver, $.Cardinality.Many), null);

export type $ContactλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "user": $.LinkDesc<$User, $.Cardinality.One, {}, false, false,  false, true>;
  "address": $.PropertyDesc<$Address, $.Cardinality.One, false, false, false, false>;
  "label": $.PropertyDesc<$Label, $.Cardinality.One, false, false, false, false>;
  "<contact[is Approver]": $.LinkDesc<$Approver, $.Cardinality.Many, {}, false, false,  false, false>;
  "<contact[is current_approver]": $.LinkDesc<$current_approver, $.Cardinality.Many, {}, false, false,  false, false>;
  "<contacts[is User]": $.LinkDesc<$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<contacts[is current_user]": $.LinkDesc<$current_user, $.Cardinality.Many, {}, false, false,  false, false>;
  "<contact": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<contacts": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Contact = $.ObjectType<"default::Contact", $ContactλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
  {user: {__element__: $User, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },label: {__element__: $Label, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {user: {__element__: $User, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },address: {__element__: $Address, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Contact = $.makeType<$Contact>(_.spec, "412114b4-3036-11ee-a143-9f65a9270a1b", _.syntax.literal);

const Contact: $.$expr_PathNode<$.TypeSet<$Contact, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Contact, $.Cardinality.Many), null);

export type $ContractλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "functions": $.LinkDesc<$Function, $.Cardinality.Many, {}, false, false,  false, false>;
  "address": $.PropertyDesc<$Address, $.Cardinality.One, true, false, false, false>;
}>;
type $Contract = $.ObjectType<"default::Contract", $ContractλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
  {address: {__element__: $Address, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Contract = $.makeType<$Contract>(_.spec, "43dc2cfa-3036-11ee-a3e8-9b08a3f3a433", _.syntax.literal);

const Contract: $.$expr_PathNode<$.TypeSet<$Contract, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Contract, $.Cardinality.Many), null);

export type $TargetλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "defaultAllow": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, false>;
  "functions": $.PropertyDesc<$.ArrayType<$.NamedTupleType<{selector: $Bytes4, allow: _std.$bool}>>, $.Cardinality.One, false, false, false, false>;
  "<default[is TargetsConfig]": $.LinkDesc<$TargetsConfig, $.Cardinality.AtMostOne, {}, true, false,  false, false>;
  "<default": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Target = $.ObjectType<"default::Target", $TargetλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
]>;
const $Target = $.makeType<$Target>(_.spec, "406a5117-3036-11ee-b599-3dae2af1c6c5", _.syntax.literal);

const Target: $.$expr_PathNode<$.TypeSet<$Target, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Target, $.Cardinality.Many), null);

export type $ContractTargetλShape = $.typeutil.flatten<$TargetλShape & {
  "contract": $.PropertyDesc<$Address, $.Cardinality.One, false, false, false, false>;
  "<contracts[is TargetsConfig]": $.LinkDesc<$TargetsConfig, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "<contracts": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $ContractTarget = $.ObjectType<"default::ContractTarget", $ContractTargetλShape, null, [
  ...$Target['__exclusives__'],
]>;
const $ContractTarget = $.makeType<$ContractTarget>(_.spec, "406cda2b-3036-11ee-8b65-abbb2fa6a927", _.syntax.literal);

const ContractTarget: $.$expr_PathNode<$.TypeSet<$ContractTarget, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($ContractTarget, $.Cardinality.Many), null);

export type $EventλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "account": $.LinkDesc<$Account, $.Cardinality.One, {}, false, false,  false, false>;
  "block": $.PropertyDesc<_std.$bigint, $.Cardinality.One, false, false, false, false>;
  "logIndex": $.PropertyDesc<$uint32, $.Cardinality.One, false, false, false, false>;
  "timestamp": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "transactionHash": $.PropertyDesc<$Bytes32, $.Cardinality.One, false, false, false, false>;
  "transaction": $.LinkDesc<$Transaction, $.Cardinality.AtMostOne, {}, false, true,  false, false>;
  "<events[is Receipt]": $.LinkDesc<$Receipt, $.Cardinality.Many, {}, false, false,  false, false>;
  "<events": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Event = $.ObjectType<"default::Event", $EventλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
  {account: {__element__: $Account, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },block: {__element__: _std.$bigint, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },logIndex: {__element__: $uint32, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Event = $.makeType<$Event>(_.spec, "4235feb0-3036-11ee-93a1-515850faf100", _.syntax.literal);

const Event: $.$expr_PathNode<$.TypeSet<$Event, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Event, $.Cardinality.Many), null);

export type $FunctionλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "selector": $.PropertyDesc<$Bytes4, $.Cardinality.One, false, false, false, false>;
  "abi": $.PropertyDesc<_std.$json, $.Cardinality.One, false, false, false, false>;
  "abiMd5": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "source": $.PropertyDesc<$AbiSource, $.Cardinality.One, false, false, false, false>;
  "<functions[is Contract]": $.LinkDesc<$Contract, $.Cardinality.Many, {}, false, false,  false, false>;
  "<functions": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Function = $.ObjectType<"default::Function", $FunctionλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
  {abiMd5: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Function = $.makeType<$Function>(_.spec, "43d87b5b-3036-11ee-822c-038e2d216b4d", _.syntax.literal);

const Function: $.$expr_PathNode<$.TypeSet<$Function, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Function, $.Cardinality.Many), null);

export type $ProposalλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "proposedBy": $.LinkDesc<$Approver, $.Cardinality.One, {}, false, false,  true, true>;
  "hash": $.PropertyDesc<$Bytes32, $.Cardinality.One, true, false, false, false>;
  "label": $.PropertyDesc<$Label, $.Cardinality.AtMostOne, false, false, false, false>;
  "approvals": $.LinkDesc<$Approval, $.Cardinality.Many, {}, false, true,  false, false>;
  "rejections": $.LinkDesc<$Rejection, $.Cardinality.Many, {}, false, true,  false, false>;
  "responses": $.LinkDesc<$ProposalResponse, $.Cardinality.Many, {}, false, true,  false, false>;
  "account": $.LinkDesc<$Account, $.Cardinality.One, {}, false, false,  false, false>;
  "policy": $.LinkDesc<$Policy, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "createdAt": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, true, true>;
  "iconUri": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "<proposal[is ProposalResponse]": $.LinkDesc<$ProposalResponse, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposal[is Rejection]": $.LinkDesc<$Rejection, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposal[is Approval]": $.LinkDesc<$Approval, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposals[is Account]": $.LinkDesc<$Account, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposal": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposals": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Proposal = $.ObjectType<"default::Proposal", $ProposalλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
  {hash: {__element__: $Bytes32, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Proposal = $.makeType<$Proposal>(_.spec, "4166cb1e-3036-11ee-8c20-c1375cab2911", _.syntax.literal);

const Proposal: $.$expr_PathNode<$.TypeSet<$Proposal, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Proposal, $.Cardinality.Many), null);

export type $MessageProposalλShape = $.typeutil.flatten<$ProposalλShape & {
  "message": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "signature": $.PropertyDesc<$Bytes, $.Cardinality.AtMostOne, false, false, false, false>;
  "typedData": $.PropertyDesc<_std.$json, $.Cardinality.AtMostOne, false, false, false, false>;
}>;
type $MessageProposal = $.ObjectType<"default::MessageProposal", $MessageProposalλShape, null, [
  ...$Proposal['__exclusives__'],
]>;
const $MessageProposal = $.makeType<$MessageProposal>(_.spec, "1a73f8e9-3bbc-11ee-ba54-adbd1e29ed25", _.syntax.literal);

const MessageProposal: $.$expr_PathNode<$.TypeSet<$MessageProposal, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($MessageProposal, $.Cardinality.Many), null);

export type $OperationλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "data": $.PropertyDesc<$Bytes, $.Cardinality.AtMostOne, false, false, false, false>;
  "to": $.PropertyDesc<$Address, $.Cardinality.One, false, false, false, false>;
  "value": $.PropertyDesc<$uint256, $.Cardinality.AtMostOne, false, false, false, false>;
  "<operations[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "<operations": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Operation = $.ObjectType<"default::Operation", $OperationλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
]>;
const $Operation = $.makeType<$Operation>(_.spec, "4188da86-3036-11ee-8ca0-0f2b3a1fa252", _.syntax.literal);

const Operation: $.$expr_PathNode<$.TypeSet<$Operation, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Operation, $.Cardinality.Many), null);

export type $PolicyλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "account": $.LinkDesc<$Account, $.Cardinality.One, {}, false, false,  false, false>;
  "name": $.PropertyDesc<$Label, $.Cardinality.One, false, false, false, false>;
  "key": $.PropertyDesc<$uint16, $.Cardinality.One, false, false, false, false>;
  "stateHistory": $.LinkDesc<$PolicyState, $.Cardinality.AtLeastOne, {}, true, false,  false, false>;
  "draft": $.LinkDesc<$PolicyState, $.Cardinality.AtMostOne, {}, false, true,  false, false>;
  "state": $.LinkDesc<$PolicyState, $.Cardinality.AtMostOne, {}, false, true,  false, false>;
  "isActive": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, true, false, false>;
  "<policy[is PolicyState]": $.LinkDesc<$PolicyState, $.Cardinality.Many, {}, false, false,  false, false>;
  "<policy[is Proposal]": $.LinkDesc<$Proposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<policy[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<policies[is Account]": $.LinkDesc<$Account, $.Cardinality.Many, {}, false, false,  false, false>;
  "<policy[is MessageProposal]": $.LinkDesc<$MessageProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<policies": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<policy": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Policy = $.ObjectType<"default::Policy", $PolicyλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
  {account: {__element__: $Account, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },name: {__element__: $Label, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {account: {__element__: $Account, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },key: {__element__: $uint16, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {stateHistory: {__element__: $PolicyState, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Policy = $.makeType<$Policy>(_.spec, "429b8aa2-3036-11ee-9b8c-01a1976f9ee4", _.syntax.literal);

const Policy: $.$expr_PathNode<$.TypeSet<$Policy, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Policy, $.Cardinality.Many), null);

export type $PolicyStateλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "activationBlock": $.PropertyDesc<_std.$bigint, $.Cardinality.AtMostOne, false, false, false, false>;
  "createdAt": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, true, true>;
  "approvers": $.LinkDesc<$Approver, $.Cardinality.Many, {}, false, false,  false, false>;
  "proposal": $.LinkDesc<$TransactionProposal, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "isAccountInitState": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, true, false, false>;
  "targets": $.LinkDesc<$TargetsConfig, $.Cardinality.One, {}, false, false,  false, false>;
  "transfers": $.LinkDesc<$TransfersConfig, $.Cardinality.One, {}, false, false,  false, false>;
  "isRemoved": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, true>;
  "threshold": $.PropertyDesc<$uint16, $.Cardinality.One, false, false, false, false>;
  "policy": $.LinkDesc<$Policy, $.Cardinality.AtMostOne, {}, false, true,  false, false>;
  "<stateHistory[is Policy]": $.LinkDesc<$Policy, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "<draft[is Policy]": $.LinkDesc<$Policy, $.Cardinality.Many, {}, false, false,  false, false>;
  "<state[is Policy]": $.LinkDesc<$Policy, $.Cardinality.Many, {}, false, false,  false, false>;
  "<draft": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<state": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<stateHistory": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $PolicyState = $.ObjectType<"default::PolicyState", $PolicyStateλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
]>;
const $PolicyState = $.makeType<$PolicyState>(_.spec, "42d967bb-3036-11ee-a190-e34dd637aae4", _.syntax.literal);

const PolicyState: $.$expr_PathNode<$.TypeSet<$PolicyState, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($PolicyState, $.Cardinality.Many), null);

export type $ReceiptλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "responses": $.PropertyDesc<$.ArrayType<$Bytes>, $.Cardinality.One, false, false, false, false>;
  "success": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, false>;
  "block": $.PropertyDesc<_std.$bigint, $.Cardinality.One, false, false, false, false>;
  "fee": $.PropertyDesc<_std.$bigint, $.Cardinality.One, false, false, false, false>;
  "gasUsed": $.PropertyDesc<_std.$bigint, $.Cardinality.One, false, false, false, false>;
  "timestamp": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "transaction": $.LinkDesc<$Transaction, $.Cardinality.One, {}, false, true,  false, false>;
  "transferApprovalEvents": $.LinkDesc<$TransferApproval, $.Cardinality.Many, {}, false, true,  false, false>;
  "transferEvents": $.LinkDesc<$Transfer, $.Cardinality.Many, {}, false, true,  false, false>;
  "events": $.LinkDesc<$Event, $.Cardinality.Many, {}, false, true,  false, false>;
  "<receipt[is Transaction]": $.LinkDesc<$Transaction, $.Cardinality.AtMostOne, {}, true, false,  false, false>;
  "<receipt": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Receipt = $.ObjectType<"default::Receipt", $ReceiptλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
]>;
const $Receipt = $.makeType<$Receipt>(_.spec, "405e2832-3036-11ee-abc6-2dc2c21b58ca", _.syntax.literal);

const Receipt: $.$expr_PathNode<$.TypeSet<$Receipt, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Receipt, $.Cardinality.Many), null);

export type $RejectionλShape = $.typeutil.flatten<$ProposalResponseλShape & {
  "<rejections[is Proposal]": $.LinkDesc<$Proposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<rejections[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<rejections[is MessageProposal]": $.LinkDesc<$MessageProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<rejections": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Rejection = $.ObjectType<"default::Rejection", $RejectionλShape, null, [
  ...$ProposalResponse['__exclusives__'],
]>;
const $Rejection = $.makeType<$Rejection>(_.spec, "4145c067-3036-11ee-8dba-8fb7c13b19ac", _.syntax.literal);

const Rejection: $.$expr_PathNode<$.TypeSet<$Rejection, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Rejection, $.Cardinality.Many), null);

export type $SimulationλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "transfers": $.LinkDesc<$TransferDetails, $.Cardinality.Many, {}, false, false,  false, false>;
  "<simulation[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<simulation": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Simulation = $.ObjectType<"default::Simulation", $SimulationλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
]>;
const $Simulation = $.makeType<$Simulation>(_.spec, "442293f2-3036-11ee-b9c7-99a1c8474895", _.syntax.literal);

const Simulation: $.$expr_PathNode<$.TypeSet<$Simulation, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Simulation, $.Cardinality.Many), null);

export type $TargetsConfigλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "contracts": $.LinkDesc<$ContractTarget, $.Cardinality.Many, {}, true, false,  false, false>;
  "default": $.LinkDesc<$Target, $.Cardinality.One, {}, true, false,  false, false>;
  "<targets[is PolicyState]": $.LinkDesc<$PolicyState, $.Cardinality.Many, {}, false, false,  false, false>;
  "<targets": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $TargetsConfig = $.ObjectType<"default::TargetsConfig", $TargetsConfigλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
  {contracts: {__element__: $ContractTarget, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {default: {__element__: $Target, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $TargetsConfig = $.makeType<$TargetsConfig>(_.spec, "42ae80b4-3036-11ee-8001-8d63c9bd6b19", _.syntax.literal);

const TargetsConfig: $.$expr_PathNode<$.TypeSet<$TargetsConfig, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($TargetsConfig, $.Cardinality.Many), null);

export type $TokenλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "units": $.PropertyDesc<$.ArrayType<$.NamedTupleType<{symbol: $Label, decimals: $uint16}>>, $.Cardinality.AtMostOne, false, false, false, false>;
  "user": $.LinkDesc<$User, $.Cardinality.AtMostOne, {}, false, false,  false, true>;
  "name": $.PropertyDesc<$Label, $.Cardinality.One, false, false, false, false>;
  "symbol": $.PropertyDesc<$Label, $.Cardinality.One, false, false, false, false>;
  "decimals": $.PropertyDesc<$uint16, $.Cardinality.One, false, false, false, false>;
  "ethereumAddress": $.PropertyDesc<$Address, $.Cardinality.AtMostOne, false, false, false, false>;
  "iconUri": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "address": $.PropertyDesc<$Address, $.Cardinality.One, false, false, false, false>;
  "isFeeToken": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, true>;
  "<feeToken[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<token[is TransferDetails]": $.LinkDesc<$TransferDetails, $.Cardinality.Many, {}, false, false,  false, false>;
  "<token[is Transferlike]": $.LinkDesc<$Transferlike, $.Cardinality.Many, {}, false, false,  false, false>;
  "<token[is TransferApproval]": $.LinkDesc<$TransferApproval, $.Cardinality.Many, {}, false, false,  false, false>;
  "<token[is Transfer]": $.LinkDesc<$Transfer, $.Cardinality.Many, {}, false, false,  false, false>;
  "<feeToken": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<token": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Token = $.ObjectType<"default::Token", $TokenλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
  {user: {__element__: $User, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },name: {__element__: $Label, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {user: {__element__: $User, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },symbol: {__element__: $Label, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {user: {__element__: $User, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },address: {__element__: $Address, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Token = $.makeType<$Token>(_.spec, "57e7dd01-3036-11ee-b673-c9fda76652f6", _.syntax.literal);

const Token: $.$expr_PathNode<$.TypeSet<$Token, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Token, $.Cardinality.Many), null);

export type $TransactionλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "proposal": $.LinkDesc<$TransactionProposal, $.Cardinality.One, {}, false, false,  false, false>;
  "receipt": $.LinkDesc<$Receipt, $.Cardinality.AtMostOne, {}, true, false,  false, false>;
  "hash": $.PropertyDesc<$Bytes32, $.Cardinality.One, true, false, true, false>;
  "submittedAt": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, true, true>;
  "gasPrice": $.PropertyDesc<$uint256, $.Cardinality.One, false, false, false, false>;
  "<transaction[is Receipt]": $.LinkDesc<$Receipt, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transactions[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transaction[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transaction[is Event]": $.LinkDesc<$Event, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transaction[is Transferlike]": $.LinkDesc<$Transferlike, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transaction[is TransferApproval]": $.LinkDesc<$TransferApproval, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transaction[is Transfer]": $.LinkDesc<$Transfer, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transaction": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transactions": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Transaction = $.ObjectType<"default::Transaction", $TransactionλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
  {receipt: {__element__: $Receipt, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {hash: {__element__: $Bytes32, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Transaction = $.makeType<$Transaction>(_.spec, "42867a88-3036-11ee-9187-b9fd1d43b222", _.syntax.literal);

const Transaction: $.$expr_PathNode<$.TypeSet<$Transaction, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Transaction, $.Cardinality.Many), null);

export type $TransactionProposalλShape = $.typeutil.flatten<Omit<$ProposalλShape, "<proposal"> & {
  "nonce": $.PropertyDesc<$uint64, $.Cardinality.One, false, false, false, false>;
  "operations": $.LinkDesc<$Operation, $.Cardinality.AtLeastOne, {}, true, false,  false, false>;
  "gasLimit": $.PropertyDesc<$uint256, $.Cardinality.One, false, false, false, true>;
  "transactions": $.LinkDesc<$Transaction, $.Cardinality.Many, {}, false, true,  false, false>;
  "transaction": $.LinkDesc<$Transaction, $.Cardinality.AtMostOne, {}, false, true,  false, false>;
  "simulation": $.LinkDesc<$Simulation, $.Cardinality.One, {}, false, false,  false, false>;
  "feeToken": $.LinkDesc<$Token, $.Cardinality.One, {}, false, false,  false, false>;
  "status": $.PropertyDesc<$TransactionProposalStatus, $.Cardinality.One, false, true, false, false>;
  "<proposal[is Transaction]": $.LinkDesc<$Transaction, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposal[is PolicyState]": $.LinkDesc<$PolicyState, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transactionProposals[is Account]": $.LinkDesc<$Account, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposal": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transactionProposals": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $TransactionProposal = $.ObjectType<"default::TransactionProposal", $TransactionProposalλShape, null, [
  ...$Proposal['__exclusives__'],
  {operations: {__element__: $Operation, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $TransactionProposal = $.makeType<$TransactionProposal>(_.spec, "41ad9587-3036-11ee-a343-c7ea2e216a19", _.syntax.literal);

const TransactionProposal: $.$expr_PathNode<$.TypeSet<$TransactionProposal, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($TransactionProposal, $.Cardinality.Many), null);

export type $TransferDetailsλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "account": $.LinkDesc<$Account, $.Cardinality.One, {}, false, false,  false, false>;
  "amount": $.PropertyDesc<_std.$bigint, $.Cardinality.One, false, false, false, false>;
  "direction": $.PropertyDesc<$TransferDirection, $.Cardinality.One, false, false, false, false>;
  "from": $.PropertyDesc<$Address, $.Cardinality.One, false, false, false, false>;
  "to": $.PropertyDesc<$Address, $.Cardinality.One, false, false, false, false>;
  "tokenAddress": $.PropertyDesc<$Address, $.Cardinality.One, false, false, false, false>;
  "token": $.LinkDesc<$Token, $.Cardinality.AtMostOne, {}, false, true,  false, false>;
  "<transfers[is Simulation]": $.LinkDesc<$Simulation, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transfers": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $TransferDetails = $.ObjectType<"default::TransferDetails", $TransferDetailsλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
]>;
const $TransferDetails = $.makeType<$TransferDetails>(_.spec, "4243afd6-3036-11ee-9566-0d53fb324a4a", _.syntax.literal);

const TransferDetails: $.$expr_PathNode<$.TypeSet<$TransferDetails, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($TransferDetails, $.Cardinality.Many), null);

export type $TransferlikeλShape = $.typeutil.flatten<$EventλShape & $TransferDetailsλShape & {
}>;
type $Transferlike = $.ObjectType<"default::Transferlike", $TransferlikeλShape, null, [
  ...$Event['__exclusives__'],
  ...$TransferDetails['__exclusives__'],
]>;
const $Transferlike = $.makeType<$Transferlike>(_.spec, "424db5c4-3036-11ee-ac5d-f31ddf869c5a", _.syntax.literal);

const Transferlike: $.$expr_PathNode<$.TypeSet<$Transferlike, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Transferlike, $.Cardinality.Many), null);

export type $TransferλShape = $.typeutil.flatten<$TransferlikeλShape & {
  "<transfers[is Account]": $.LinkDesc<$Account, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transferEvents[is Receipt]": $.LinkDesc<$Receipt, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transferEvents": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transfers": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Transfer = $.ObjectType<"default::Transfer", $TransferλShape, null, [
  ...$Transferlike['__exclusives__'],
]>;
const $Transfer = $.makeType<$Transfer>(_.spec, "425cc858-3036-11ee-99c6-9314fb55e55f", _.syntax.literal);

const Transfer: $.$expr_PathNode<$.TypeSet<$Transfer, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Transfer, $.Cardinality.Many), null);

export type $TransferApprovalλShape = $.typeutil.flatten<$TransferlikeλShape & {
  "previous": $.LinkDesc<$TransferApproval, $.Cardinality.AtMostOne, {}, false, true,  false, false>;
  "delta": $.PropertyDesc<_std.$bigint, $.Cardinality.One, false, true, false, false>;
  "<previous[is TransferApproval]": $.LinkDesc<$TransferApproval, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transferApprovalEvents[is Receipt]": $.LinkDesc<$Receipt, $.Cardinality.Many, {}, false, false,  false, false>;
  "<previous": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transferApprovalEvents": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $TransferApproval = $.ObjectType<"default::TransferApproval", $TransferApprovalλShape, null, [
  ...$Transferlike['__exclusives__'],
]>;
const $TransferApproval = $.makeType<$TransferApproval>(_.spec, "426bc1f0-3036-11ee-a5f7-8343c5428a43", _.syntax.literal);

const TransferApproval: $.$expr_PathNode<$.TypeSet<$TransferApproval, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($TransferApproval, $.Cardinality.Many), null);

export type $TransferLimitλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "amount": $.PropertyDesc<$uint224, $.Cardinality.One, false, false, false, false>;
  "duration": $.PropertyDesc<$uint32, $.Cardinality.One, false, false, false, false>;
  "token": $.PropertyDesc<$Address, $.Cardinality.One, false, false, false, false>;
  "<limits[is TransfersConfig]": $.LinkDesc<$TransfersConfig, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "<limits": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $TransferLimit = $.ObjectType<"default::TransferLimit", $TransferLimitλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
]>;
const $TransferLimit = $.makeType<$TransferLimit>(_.spec, "42b623a6-3036-11ee-b625-b3eca9fd3fe2", _.syntax.literal);

const TransferLimit: $.$expr_PathNode<$.TypeSet<$TransferLimit, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($TransferLimit, $.Cardinality.Many), null);

export type $TransfersConfigλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "limits": $.LinkDesc<$TransferLimit, $.Cardinality.Many, {}, true, false,  false, false>;
  "budget": $.PropertyDesc<$uint32, $.Cardinality.One, false, false, false, false>;
  "defaultAllow": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, true>;
  "<transfers[is PolicyState]": $.LinkDesc<$PolicyState, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transfers": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $TransfersConfig = $.ObjectType<"default::TransfersConfig", $TransfersConfigλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
  {limits: {__element__: $TransferLimit, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $TransfersConfig = $.makeType<$TransfersConfig>(_.spec, "42b836e3-3036-11ee-a74b-5f0d320a419d", _.syntax.literal);

const TransfersConfig: $.$expr_PathNode<$.TypeSet<$TransfersConfig, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($TransfersConfig, $.Cardinality.Many), null);

export type $UserλShape = $.typeutil.flatten<_std.$Object_169a5ce7108a11eeb5af6feb88c88f11λShape & {
  "name": $.PropertyDesc<$Label, $.Cardinality.AtMostOne, false, false, false, false>;
  "approvers": $.LinkDesc<$Approver, $.Cardinality.Many, {}, false, true,  false, false>;
  "accounts": $.LinkDesc<$Account, $.Cardinality.Many, {}, false, true,  false, false>;
  "contacts": $.LinkDesc<$Contact, $.Cardinality.Many, {}, false, true,  false, false>;
  "<user[is Approver]": $.LinkDesc<$Approver, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user[is current_approver]": $.LinkDesc<$current_approver, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user[is Contact]": $.LinkDesc<$Contact, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user[is Token]": $.LinkDesc<$Token, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $User = $.ObjectType<"default::User", $UserλShape, null, [
  ..._std.$Object_169a5ce7108a11eeb5af6feb88c88f11['__exclusives__'],
]>;
const $User = $.makeType<$User>(_.spec, "40804ae8-3036-11ee-93ff-7507393b3497", _.syntax.literal);

const User: $.$expr_PathNode<$.TypeSet<$User, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($User, $.Cardinality.Many), null);

export type $current_approverλShape = $.typeutil.flatten<$ApproverλShape & {
}>;
type $current_approver = $.ObjectType<"default::current_approver", $current_approverλShape, null, [
  ...$Approver['__exclusives__'],
]>;
const $current_approver = $.makeType<$current_approver>(_.spec, "407fde4e-3036-11ee-9712-31cfdf143a3a", _.syntax.literal);

const current_approver: $.$expr_PathNode<$.TypeSet<$current_approver, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($current_approver, $.Cardinality.Many), null);

export type $current_userλShape = $.typeutil.flatten<$UserλShape & {
}>;
type $current_user = $.ObjectType<"default::current_user", $current_userλShape, null, [
  ...$User['__exclusives__'],
]>;
const $current_user = $.makeType<$current_user>(_.spec, "40e647ea-3036-11ee-aa0c-6fb938ac6ffb", _.syntax.literal);

const current_user: $.$expr_PathNode<$.TypeSet<$current_user, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($current_user, $.Cardinality.Many), null);

const $default__globals: {  current_approver: _.syntax.$expr_Global<
              // "default::current_approver",
              $current_approver,
              $.Cardinality.AtMostOne
              >,  current_approver_address: _.syntax.$expr_Global<
              // "default::current_approver_address",
              $Address,
              $.Cardinality.AtMostOne
              >,  current_user: _.syntax.$expr_Global<
              // "default::current_user",
              $current_user,
              $.Cardinality.AtMostOne
              >,  current_user_accounts: _.syntax.$expr_Global<
              // "default::current_user_accounts",
              $current_user_accounts,
              $.Cardinality.Many
              >,  current_user_accounts_array: _.syntax.$expr_Global<
              // "default::current_user_accounts_array",
              $.ArrayType<_std.$uuid>,
              $.Cardinality.AtMostOne
              >} = {  current_approver: _.syntax.makeGlobal(
              "default::current_approver",
              $.makeType(_.spec, "407fde4e-3036-11ee-9712-31cfdf143a3a", _.syntax.literal),
              $.Cardinality.AtMostOne) as any,  current_approver_address: _.syntax.makeGlobal(
              "default::current_approver_address",
              $.makeType(_.spec, "405d621b-3036-11ee-b6d7-590684333403", _.syntax.literal),
              $.Cardinality.AtMostOne) as any,  current_user: _.syntax.makeGlobal(
              "default::current_user",
              $.makeType(_.spec, "40e647ea-3036-11ee-aa0c-6fb938ac6ffb", _.syntax.literal),
              $.Cardinality.AtMostOne) as any,  current_user_accounts: _.syntax.makeGlobal(
              "default::current_user_accounts",
              $.makeType(_.spec, "405d4747-3036-11ee-99a5-0f7ec6101fdb", _.syntax.literal),
              $.Cardinality.Many) as any,  current_user_accounts_array: _.syntax.makeGlobal(
              "default::current_user_accounts_array",
              $.makeType(_.spec, "21bd1dc5-108a-11ee-9ec4-f54759247364", _.syntax.literal),
              $.Cardinality.AtMostOne) as any};



export { AbiSource, Address, Bytes, Bytes32, Bytes4, Label, MAC, TransactionProposalStatus, TransferDirection, current_user_accounts, uint16, uint224, uint256, uint32, uint64, $Account, Account, $ProposalResponse, ProposalResponse, $Approval, Approval, $Approver, Approver, $Contact, Contact, $Contract, Contract, $Target, Target, $ContractTarget, ContractTarget, $Event, Event, $Function, Function, $Proposal, Proposal, $MessageProposal, MessageProposal, $Operation, Operation, $Policy, Policy, $PolicyState, PolicyState, $Receipt, Receipt, $Rejection, Rejection, $Simulation, Simulation, $TargetsConfig, TargetsConfig, $Token, Token, $Transaction, Transaction, $TransactionProposal, TransactionProposal, $TransferDetails, TransferDetails, $Transferlike, Transferlike, $Transfer, Transfer, $TransferApproval, TransferApproval, $TransferLimit, TransferLimit, $TransfersConfig, TransfersConfig, $User, User, $current_approver, current_approver, $current_user, current_user };

type __defaultExports = {
  "AbiSource": typeof AbiSource;
  "Address": typeof Address;
  "Bytes": typeof Bytes;
  "Bytes32": typeof Bytes32;
  "Bytes4": typeof Bytes4;
  "Label": typeof Label;
  "MAC": typeof MAC;
  "TransactionProposalStatus": typeof TransactionProposalStatus;
  "TransferDirection": typeof TransferDirection;
  "current_user_accounts": typeof current_user_accounts;
  "uint16": typeof uint16;
  "uint224": typeof uint224;
  "uint256": typeof uint256;
  "uint32": typeof uint32;
  "uint64": typeof uint64;
  "Account": typeof Account;
  "ProposalResponse": typeof ProposalResponse;
  "Approval": typeof Approval;
  "Approver": typeof Approver;
  "Contact": typeof Contact;
  "Contract": typeof Contract;
  "Target": typeof Target;
  "ContractTarget": typeof ContractTarget;
  "Event": typeof Event;
  "Function": typeof Function;
  "Proposal": typeof Proposal;
  "MessageProposal": typeof MessageProposal;
  "Operation": typeof Operation;
  "Policy": typeof Policy;
  "PolicyState": typeof PolicyState;
  "Receipt": typeof Receipt;
  "Rejection": typeof Rejection;
  "Simulation": typeof Simulation;
  "TargetsConfig": typeof TargetsConfig;
  "Token": typeof Token;
  "Transaction": typeof Transaction;
  "TransactionProposal": typeof TransactionProposal;
  "TransferDetails": typeof TransferDetails;
  "Transferlike": typeof Transferlike;
  "Transfer": typeof Transfer;
  "TransferApproval": typeof TransferApproval;
  "TransferLimit": typeof TransferLimit;
  "TransfersConfig": typeof TransfersConfig;
  "User": typeof User;
  "current_approver": typeof current_approver;
  "current_user": typeof current_user;
  "global": typeof $default__globals
};
const __defaultExports: __defaultExports = {
  "AbiSource": AbiSource,
  "Address": Address,
  "Bytes": Bytes,
  "Bytes32": Bytes32,
  "Bytes4": Bytes4,
  "Label": Label,
  "MAC": MAC,
  "TransactionProposalStatus": TransactionProposalStatus,
  "TransferDirection": TransferDirection,
  "current_user_accounts": current_user_accounts,
  "uint16": uint16,
  "uint224": uint224,
  "uint256": uint256,
  "uint32": uint32,
  "uint64": uint64,
  "Account": Account,
  "ProposalResponse": ProposalResponse,
  "Approval": Approval,
  "Approver": Approver,
  "Contact": Contact,
  "Contract": Contract,
  "Target": Target,
  "ContractTarget": ContractTarget,
  "Event": Event,
  "Function": Function,
  "Proposal": Proposal,
  "MessageProposal": MessageProposal,
  "Operation": Operation,
  "Policy": Policy,
  "PolicyState": PolicyState,
  "Receipt": Receipt,
  "Rejection": Rejection,
  "Simulation": Simulation,
  "TargetsConfig": TargetsConfig,
  "Token": Token,
  "Transaction": Transaction,
  "TransactionProposal": TransactionProposal,
  "TransferDetails": TransferDetails,
  "Transferlike": Transferlike,
  "Transfer": Transfer,
  "TransferApproval": TransferApproval,
  "TransferLimit": TransferLimit,
  "TransfersConfig": TransfersConfig,
  "User": User,
  "current_approver": current_approver,
  "current_user": current_user,
  "global": $default__globals
};
export default __defaultExports;
