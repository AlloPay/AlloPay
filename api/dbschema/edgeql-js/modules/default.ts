// GENERATED by @edgedb/generate v0.4.1

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
export type $AbiSource = {
  "Verified": $.$expr_Literal<$AbiSource>;
} & $.EnumType<"default::AbiSource", ["Verified"]>;
const AbiSource: $AbiSource = $.makeType<$AbiSource>(_.spec, "67f2362c-9eb1-11ee-b5a9-393611ef9248", _.syntax.literal);

export type $Address = $.ScalarType<"std::str", string>;
const Address: $.scalarTypeWithConstructor<_std.$str, never> = $.makeType<$.scalarTypeWithConstructor<_std.$str, never>>(_.spec, "60655e66-9eb1-11ee-a238-17db85beea73", _.syntax.literal);

export type $Amount = $.ScalarType<"std::decimal", string>;
const Amount: $.scalarTypeWithConstructor<_std.$decimal, never> = $.makeType<$.scalarTypeWithConstructor<_std.$decimal, never>>(_.spec, "60579410-9eb1-11ee-83fe-6f9ddcdb9462", _.syntax.literal);

export type $ApprovalIssue = {
  "HashMismatch": $.$expr_Literal<$ApprovalIssue>;
  "Expired": $.$expr_Literal<$ApprovalIssue>;
} & $.EnumType<"default::ApprovalIssue", ["HashMismatch", "Expired"]>;
const ApprovalIssue: $ApprovalIssue = $.makeType<$ApprovalIssue>(_.spec, "9a33a271-9eb1-11ee-bbdd-9d64df864a69", _.syntax.literal);

export type $Bytes = $.ScalarType<"std::str", string>;
const Bytes: $.scalarTypeWithConstructor<_std.$str, never> = $.makeType<$.scalarTypeWithConstructor<_std.$str, never>>(_.spec, "60540d0a-9eb1-11ee-a2d1-b39c69319553", _.syntax.literal);

export type $Bytes32 = $.ScalarType<"std::str", string>;
const Bytes32: $.scalarTypeWithConstructor<_std.$str, never> = $.makeType<$.scalarTypeWithConstructor<_std.$str, never>>(_.spec, "6077d203-9eb1-11ee-981f-75a5d11032a6", _.syntax.literal);

export type $Bytes4 = $.ScalarType<"std::str", string>;
const Bytes4: $.scalarTypeWithConstructor<_std.$str, never> = $.makeType<$.scalarTypeWithConstructor<_std.$str, never>>(_.spec, "6116a6a7-9eb1-11ee-afe2-67018602e79a", _.syntax.literal);

export type $CloudProvider = {
  "Apple": $.$expr_Literal<$CloudProvider>;
  "Google": $.$expr_Literal<$CloudProvider>;
} & $.EnumType<"default::CloudProvider", ["Apple", "Google"]>;
const CloudProvider: $CloudProvider = $.makeType<$CloudProvider>(_.spec, "6060cf1e-9eb1-11ee-ad84-cd4dc305dfb6", _.syntax.literal);

export type $Label = $.ScalarType<"std::str", string>;
const Label: $.scalarTypeWithConstructor<_std.$str, never> = $.makeType<$.scalarTypeWithConstructor<_std.$str, never>>(_.spec, "60660697-9eb1-11ee-a671-3b71c4cfd6ed", _.syntax.literal);

export type $MAC = $.ScalarType<"std::str", string>;
const MAC: $.scalarTypeWithConstructor<_std.$str, never> = $.makeType<$.scalarTypeWithConstructor<_std.$str, never>>(_.spec, "60602f0e-9eb1-11ee-9da7-57638783c02f", _.syntax.literal);

export type $ProposalRisk = {
  "Low": $.$expr_Literal<$ProposalRisk>;
  "Medium": $.$expr_Literal<$ProposalRisk>;
  "High": $.$expr_Literal<$ProposalRisk>;
} & $.EnumType<"default::ProposalRisk", ["Low", "Medium", "High"]>;
const ProposalRisk: $ProposalRisk = $.makeType<$ProposalRisk>(_.spec, "611c2a24-9eb1-11ee-bece-734cf3f2a76d", _.syntax.literal);

export type $TransactionProposalStatus = {
  "Pending": $.$expr_Literal<$TransactionProposalStatus>;
  "Executing": $.$expr_Literal<$TransactionProposalStatus>;
  "Successful": $.$expr_Literal<$TransactionProposalStatus>;
  "Failed": $.$expr_Literal<$TransactionProposalStatus>;
} & $.EnumType<"default::TransactionProposalStatus", ["Pending", "Executing", "Successful", "Failed"]>;
const TransactionProposalStatus: $TransactionProposalStatus = $.makeType<$TransactionProposalStatus>(_.spec, "61f6f6bc-9eb1-11ee-a41b-35eef0481344", _.syntax.literal);

export type $TransferDirection = {
  "In": $.$expr_Literal<$TransferDirection>;
  "Out": $.$expr_Literal<$TransferDirection>;
} & $.EnumType<"default::TransferDirection", ["In", "Out"]>;
const TransferDirection: $TransferDirection = $.makeType<$TransferDirection>(_.spec, "62852d76-9eb1-11ee-bc70-ed0f92a0d2db", _.syntax.literal);

export type $UAddress = $.ScalarType<"std::str", string>;
const UAddress: $.scalarTypeWithConstructor<_std.$str, never> = $.makeType<$.scalarTypeWithConstructor<_std.$str, never>>(_.spec, "6055ec33-9eb1-11ee-b040-6512afc4d633", _.syntax.literal);

export type $Url = $.ScalarType<"std::str", string>;
const Url: $.scalarTypeWithConstructor<_std.$str, never> = $.makeType<$.scalarTypeWithConstructor<_std.$str, never>>(_.spec, "d5027c44-c661-11ee-8085-211a59ea5371", _.syntax.literal);

export type $current_accounts_set = $.ScalarType<"std::uuid", string>;
const current_accounts_set: $.scalarTypeWithConstructor<_std.$uuid, never> = $.makeType<$.scalarTypeWithConstructor<_std.$uuid, never>>(_.spec, "6055c7ea-9eb1-11ee-81f8-83dd695319ad", _.syntax.literal);

export type $uint16 = $.ScalarType<"std::number", number>;
const uint16: $.scalarTypeWithConstructor<_std.$number, string> = $.makeType<$.scalarTypeWithConstructor<_std.$number, string>>(_.spec, "606e95aa-9eb1-11ee-b7ef-857eb61b8295", _.syntax.literal);

export type $uint224 = $.ScalarType<"std::bigint", bigint>;
const uint224: $.scalarTypeWithConstructor<_std.$bigint, never> = $.makeType<$.scalarTypeWithConstructor<_std.$bigint, never>>(_.spec, "639eec95-9eb1-11ee-9fef-9f7584128072", _.syntax.literal);

export type $uint256 = $.ScalarType<"std::bigint", bigint>;
const uint256: $.scalarTypeWithConstructor<_std.$bigint, never> = $.makeType<$.scalarTypeWithConstructor<_std.$bigint, never>>(_.spec, "619e9f41-9eb1-11ee-b615-2300f49abc99", _.syntax.literal);

export type $uint32 = $.ScalarType<"std::number", number>;
const uint32: $.scalarTypeWithConstructor<_std.$number, string> = $.makeType<$.scalarTypeWithConstructor<_std.$number, string>>(_.spec, "628546ad-9eb1-11ee-9792-1f5ecf66b8fc", _.syntax.literal);

export type $uint64 = $.ScalarType<"std::bigint", bigint>;
const uint64: $.scalarTypeWithConstructor<_std.$bigint, never> = $.makeType<$.scalarTypeWithConstructor<_std.$bigint, never>>(_.spec, "67ffbff6-9eb1-11ee-abf1-9df221355324", _.syntax.literal);

export type $Account位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "address": $.PropertyDesc<$UAddress, $.Cardinality.One, true, false, true, false>;
  "chain": $.PropertyDesc<_std.$str, $.Cardinality.One, false, true, false, false>;
  "implementation": $.PropertyDesc<$Address, $.Cardinality.One, false, false, false, false>;
  "label": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "photoUri": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "salt": $.PropertyDesc<$Bytes32, $.Cardinality.One, false, false, false, false>;
  "policies": $.LinkDesc<$Policy, $.Cardinality.Many, {}, false, true,  false, false>;
  "approvers": $.LinkDesc<$Approver, $.Cardinality.Many, {}, false, true,  false, false>;
  "proposals": $.LinkDesc<$Proposal, $.Cardinality.Many, {}, false, true,  false, false>;
  "transactionProposals": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, true,  false, false>;
  "transfers": $.LinkDesc<$Transfer, $.Cardinality.Many, {}, false, true,  false, false>;
  "paymasterEthCredit": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, true>;
  "upgradedAtBlock": $.PropertyDesc<_std.$bigint, $.Cardinality.AtMostOne, false, false, false, false>;
  "isActive": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, true, false, false>;
  "activationEthFee": $.PropertyDesc<_std.$decimal, $.Cardinality.AtMostOne, false, false, false, false>;
  "<account[is Proposal]": $.LinkDesc<$Proposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<account[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<account[is TransferDetails]": $.LinkDesc<$TransferDetails, $.Cardinality.Many, {}, false, false,  false, false>;
  "<account[is Transferlike]": $.LinkDesc<$Transferlike, $.Cardinality.Many, {}, false, false,  false, false>;
  "<account[is Transfer]": $.LinkDesc<$Transfer, $.Cardinality.Many, {}, false, false,  false, false>;
  "<account[is TransferApproval]": $.LinkDesc<$TransferApproval, $.Cardinality.Many, {}, false, false,  false, false>;
  "<account[is MessageProposal]": $.LinkDesc<$MessageProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<account[is Policy]": $.LinkDesc<$Policy, $.Cardinality.Many, {}, false, false,  false, false>;
  "<primaryAccount[is User]": $.LinkDesc<$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<primaryAccount[is current_user]": $.LinkDesc<$current_user, $.Cardinality.Many, {}, false, false,  false, false>;
  "<accounts[is Approver]": $.LinkDesc<$Approver, $.Cardinality.Many, {}, false, false,  false, false>;
  "<accounts[is User]": $.LinkDesc<$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<accounts[is current_user]": $.LinkDesc<$current_user, $.Cardinality.Many, {}, false, false,  false, false>;
  "<accounts[is current_approver]": $.LinkDesc<$current_approver, $.Cardinality.Many, {}, false, false,  false, false>;
  "<account": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<accounts": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<primaryAccount": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Account = $.ObjectType<"default::Account", $Account位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {address: {__element__: $UAddress, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {label: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Account = $.makeType<$Account>(_.spec, "60c79af8-9eb1-11ee-bcad-b941cbebfd9e", _.syntax.literal);

const Account: $.$expr_PathNode<$.TypeSet<$Account, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Account, $.Cardinality.Many), null);

export type $Action位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "functions": $.LinkDesc<$ActionFunction, $.Cardinality.AtLeastOne, {}, false, false,  false, false>;
  "allow": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, false>;
  "description": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "label": $.PropertyDesc<$Label, $.Cardinality.One, false, false, false, false>;
  "<actions[is PolicyState]": $.LinkDesc<$PolicyState, $.Cardinality.Many, {}, false, false,  false, false>;
  "<actions": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Action = $.ObjectType<"default::Action", $Action位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Action = $.makeType<$Action>(_.spec, "6119744c-9eb1-11ee-993b-73c7cfe21368", _.syntax.literal);

const Action: $.$expr_PathNode<$.TypeSet<$Action, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Action, $.Cardinality.Many), null);

export type $ActionFunction位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "abi": $.PropertyDesc<_std.$json, $.Cardinality.AtMostOne, false, false, false, false>;
  "contract": $.PropertyDesc<$Address, $.Cardinality.AtMostOne, false, false, false, false>;
  "selector": $.PropertyDesc<$Bytes4, $.Cardinality.AtMostOne, false, false, false, false>;
  "<functions[is Action]": $.LinkDesc<$Action, $.Cardinality.Many, {}, false, false,  false, false>;
  "<functions": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $ActionFunction = $.ObjectType<"default::ActionFunction", $ActionFunction位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $ActionFunction = $.makeType<$ActionFunction>(_.spec, "6117586b-9eb1-11ee-abde-e193ab56f3af", _.syntax.literal);

const ActionFunction: $.$expr_PathNode<$.TypeSet<$ActionFunction, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($ActionFunction, $.Cardinality.Many), null);

export type $ProposalResponse位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "approver": $.LinkDesc<$Approver, $.Cardinality.One, {}, false, false,  false, true>;
  "createdAt": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "proposal": $.LinkDesc<$Proposal, $.Cardinality.One, {}, false, false,  false, false>;
}>;
type $ProposalResponse = $.ObjectType<"default::ProposalResponse", $ProposalResponse位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {proposal: {__element__: $Proposal, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },approver: {__element__: $Approver, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $ProposalResponse = $.makeType<$ProposalResponse>(_.spec, "60d79f4b-9eb1-11ee-86f3-f17fec7781e7", _.syntax.literal);

const ProposalResponse: $.$expr_PathNode<$.TypeSet<$ProposalResponse, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($ProposalResponse, $.Cardinality.Many), null);

export type $Approval位Shape = $.typeutil.flatten<$ProposalResponse位Shape & {
  "signature": $.PropertyDesc<$Bytes, $.Cardinality.One, false, false, false, false>;
  "signedHash": $.PropertyDesc<$Bytes32, $.Cardinality.One, false, false, false, false>;
  "issues": $.PropertyDesc<$.ArrayType<$ApprovalIssue>, $.Cardinality.One, false, true, false, false>;
  "invalid": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, true, false, false>;
  "<approvals[is Proposal]": $.LinkDesc<$Proposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approvals[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approvals[is MessageProposal]": $.LinkDesc<$MessageProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approvals": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Approval = $.ObjectType<"default::Approval", $Approval位Shape, null, [
  ...$ProposalResponse['__exclusives__'],
]>;
const $Approval = $.makeType<$Approval>(_.spec, "6101e79f-9eb1-11ee-b42c-07ce6283aad1", _.syntax.literal);

const Approval: $.$expr_PathNode<$.TypeSet<$Approval, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Approval, $.Cardinality.Many), null);

export type $Approver位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "bluetoothDevices": $.PropertyDesc<$.ArrayType<$MAC>, $.Cardinality.AtMostOne, false, false, false, false>;
  "cloud": $.LinkDesc<$CloudShare, $.Cardinality.AtMostOne, {}, true, false,  false, false>;
  "address": $.PropertyDesc<$Address, $.Cardinality.One, true, false, true, false>;
  "name": $.PropertyDesc<$Label, $.Cardinality.AtMostOne, false, false, false, false>;
  "pushToken": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "user": $.LinkDesc<$User, $.Cardinality.One, {}, false, false,  false, true>;
  "accounts": $.LinkDesc<$Account, $.Cardinality.Many, {}, false, true,  false, false>;
  "contact": $.LinkDesc<$Contact, $.Cardinality.AtMostOne, {}, false, true,  false, false>;
  "label": $.PropertyDesc<$Label, $.Cardinality.AtMostOne, false, true, false, false>;
  "<approvers[is User]": $.LinkDesc<$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approvers[is current_user]": $.LinkDesc<$current_user, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approver[is ProposalResponse]": $.LinkDesc<$ProposalResponse, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approver[is Approval]": $.LinkDesc<$Approval, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposedBy[is Proposal]": $.LinkDesc<$Proposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approver[is Rejection]": $.LinkDesc<$Rejection, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposedBy[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposedBy[is MessageProposal]": $.LinkDesc<$MessageProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approvers[is PolicyState]": $.LinkDesc<$PolicyState, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approvers[is Account]": $.LinkDesc<$Account, $.Cardinality.Many, {}, false, false,  false, false>;
  "<potentialRejectors[is Proposal]": $.LinkDesc<$Proposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<potentialRejectors[is MessageProposal]": $.LinkDesc<$MessageProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<potentialApprovers[is Proposal]": $.LinkDesc<$Proposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<potentialApprovers[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<potentialApprovers[is MessageProposal]": $.LinkDesc<$MessageProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<potentialRejectors[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approvers[is current_accounts]": $.LinkDesc<$current_accounts, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approver": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<approvers": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<potentialApprovers": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<potentialRejectors": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposedBy": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Approver = $.ObjectType<"default::Approver", $Approver位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {user: {__element__: $User, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },address: {__element__: $Address, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {cloud: {__element__: $CloudShare, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {address: {__element__: $Address, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Approver = $.makeType<$Approver>(_.spec, "606a4176-9eb1-11ee-9a84-e501087b46b4", _.syntax.literal);

const Approver: $.$expr_PathNode<$.TypeSet<$Approver, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Approver, $.Cardinality.Many), null);

export type $CloudShare位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "provider": $.PropertyDesc<$CloudProvider, $.Cardinality.One, false, false, false, false>;
  "subject": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "share": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "<cloud[is Approver]": $.LinkDesc<$Approver, $.Cardinality.AtMostOne, {}, true, false,  false, false>;
  "<cloud[is current_approver]": $.LinkDesc<$current_approver, $.Cardinality.Many, {}, false, false,  false, false>;
  "<cloud": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $CloudShare = $.ObjectType<"default::CloudShare", $CloudShare位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {provider: {__element__: $CloudProvider, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },subject: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $CloudShare = $.makeType<$CloudShare>(_.spec, "6060e7a5-9eb1-11ee-a81d-3def56b45245", _.syntax.literal);

const CloudShare: $.$expr_PathNode<$.TypeSet<$CloudShare, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($CloudShare, $.Cardinality.Many), null);

export type $Contact位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "address": $.PropertyDesc<$UAddress, $.Cardinality.One, false, false, false, false>;
  "label": $.PropertyDesc<$Label, $.Cardinality.One, false, false, false, false>;
  "user": $.LinkDesc<$User, $.Cardinality.One, {}, false, false,  false, true>;
  "<contact[is Approver]": $.LinkDesc<$Approver, $.Cardinality.Many, {}, false, false,  false, false>;
  "<contact[is current_approver]": $.LinkDesc<$current_approver, $.Cardinality.Many, {}, false, false,  false, false>;
  "<contacts[is User]": $.LinkDesc<$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<contacts[is current_user]": $.LinkDesc<$current_user, $.Cardinality.Many, {}, false, false,  false, false>;
  "<contact": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<contacts": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Contact = $.ObjectType<"default::Contact", $Contact位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {user: {__element__: $User, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },label: {__element__: $Label, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {user: {__element__: $User, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },address: {__element__: $UAddress, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Contact = $.makeType<$Contact>(_.spec, "67529b12-9eb1-11ee-a5ee-0522df2d9ee8", _.syntax.literal);

const Contact: $.$expr_PathNode<$.TypeSet<$Contact, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Contact, $.Cardinality.Many), null);

export type $Contract位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "functions": $.LinkDesc<$Function, $.Cardinality.Many, {}, false, false,  false, false>;
  "address": $.PropertyDesc<$Address, $.Cardinality.One, true, false, false, false>;
}>;
type $Contract = $.ObjectType<"default::Contract", $Contract位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {address: {__element__: $Address, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Contract = $.makeType<$Contract>(_.spec, "67f619e8-9eb1-11ee-a82b-4fea78d60338", _.syntax.literal);

const Contract: $.$expr_PathNode<$.TypeSet<$Contract, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Contract, $.Cardinality.Many), null);

export type $Event位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "transaction": $.LinkDesc<$Transaction, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "internal": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, true, false, false>;
  "logIndex": $.PropertyDesc<$uint32, $.Cardinality.One, false, false, false, false>;
  "timestamp": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "transactionHash": $.PropertyDesc<$Bytes32, $.Cardinality.One, false, false, false, false>;
  "block": $.PropertyDesc<_std.$bigint, $.Cardinality.One, false, false, false, false>;
  "<events[is Transaction]": $.LinkDesc<$Transaction, $.Cardinality.Many, {}, false, false,  false, false>;
  "<events[is Receipt]": $.LinkDesc<$Receipt, $.Cardinality.Many, {}, false, false,  false, false>;
  "<events": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Event = $.ObjectType<"default::Event", $Event位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Event = $.makeType<$Event>(_.spec, "6288c064-9eb1-11ee-8b7a-4332847caf6a", _.syntax.literal);

const Event: $.$expr_PathNode<$.TypeSet<$Event, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Event, $.Cardinality.Many), null);

export type $Function位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "selector": $.PropertyDesc<$Bytes4, $.Cardinality.One, false, false, false, false>;
  "abi": $.PropertyDesc<_std.$json, $.Cardinality.One, false, false, false, false>;
  "abiMd5": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "source": $.PropertyDesc<$AbiSource, $.Cardinality.One, false, false, false, false>;
  "<functions[is Contract]": $.LinkDesc<$Contract, $.Cardinality.Many, {}, false, false,  false, false>;
  "<functions": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Function = $.ObjectType<"default::Function", $Function位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {abiMd5: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Function = $.makeType<$Function>(_.spec, "67f252a9-9eb1-11ee-9ca5-979c37f4c2ef", _.syntax.literal);

const Function: $.$expr_PathNode<$.TypeSet<$Function, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Function, $.Cardinality.Many), null);

export type $Proposal位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "account": $.LinkDesc<$Account, $.Cardinality.One, {}, false, false,  false, false>;
  "proposedBy": $.LinkDesc<$Approver, $.Cardinality.One, {}, false, false,  true, true>;
  "createdAt": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, true, true>;
  "label": $.PropertyDesc<$Label, $.Cardinality.AtMostOne, false, false, false, false>;
  "validFrom": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, false>;
  "approvals": $.LinkDesc<$Approval, $.Cardinality.Many, {}, false, true,  false, false>;
  "rejections": $.LinkDesc<$Rejection, $.Cardinality.Many, {}, false, true,  false, false>;
  "riskLabel": $.PropertyDesc<$ProposalRisk, $.Cardinality.AtMostOne, false, true, false, false>;
  "policy": $.LinkDesc<$Policy, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "potentialApprovers": $.LinkDesc<$Approver, $.Cardinality.Many, {}, false, true,  false, false>;
  "potentialRejectors": $.LinkDesc<$Approver, $.Cardinality.Many, {}, false, true,  false, false>;
  "hash": $.PropertyDesc<$Bytes32, $.Cardinality.One, false, false, false, false>;
  "dapp": $.PropertyDesc<$.NamedTupleType<{name: _std.$str, url: $Url, icons: $.ArrayType<$Url>}>, $.Cardinality.AtMostOne, false, false, false, false>;
  "iconUri": $.PropertyDesc<$Url, $.Cardinality.AtMostOne, false, false, false, false>;
  "<proposal[is ProposalResponse]": $.LinkDesc<$ProposalResponse, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposal[is Approval]": $.LinkDesc<$Approval, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposal[is Rejection]": $.LinkDesc<$Rejection, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposal[is ProposalRiskLabel]": $.LinkDesc<$ProposalRiskLabel, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposals[is Account]": $.LinkDesc<$Account, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposals[is current_accounts]": $.LinkDesc<$current_accounts, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposal": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposals": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Proposal = $.ObjectType<"default::Proposal", $Proposal位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {hash: {__element__: $Bytes32, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },account: {__element__: $Account, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Proposal = $.makeType<$Proposal>(_.spec, "611c412b-9eb1-11ee-a799-19af5ce2506a", _.syntax.literal);

const Proposal: $.$expr_PathNode<$.TypeSet<$Proposal, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Proposal, $.Cardinality.Many), null);

export type $MessageProposal位Shape = $.typeutil.flatten<$Proposal位Shape & {
  "message": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "signature": $.PropertyDesc<$Bytes, $.Cardinality.AtMostOne, false, false, false, false>;
  "typedData": $.PropertyDesc<_std.$json, $.Cardinality.AtMostOne, false, false, false, false>;
  "signedHash": $.PropertyDesc<$Bytes32, $.Cardinality.One, false, false, false, false>;
}>;
type $MessageProposal = $.ObjectType<"default::MessageProposal", $MessageProposal位Shape, null, [
  ...$Proposal['__exclusives__'],
]>;
const $MessageProposal = $.makeType<$MessageProposal>(_.spec, "633d0f7e-9eb1-11ee-8424-0d85ff762f95", _.syntax.literal);

const MessageProposal: $.$expr_PathNode<$.TypeSet<$MessageProposal, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($MessageProposal, $.Cardinality.Many), null);

export type $Operation位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "data": $.PropertyDesc<$Bytes, $.Cardinality.AtMostOne, false, false, false, false>;
  "to": $.PropertyDesc<$Address, $.Cardinality.One, false, false, false, false>;
  "value": $.PropertyDesc<$uint256, $.Cardinality.AtMostOne, false, false, false, false>;
  "<operations[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "<operations": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Operation = $.ObjectType<"default::Operation", $Operation位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Operation = $.makeType<$Operation>(_.spec, "61a3f19d-9eb1-11ee-903c-0b34f058a171", _.syntax.literal);

const Operation: $.$expr_PathNode<$.TypeSet<$Operation, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Operation, $.Cardinality.Many), null);

export type $PaymasterFees位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "activation": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, true>;
  "total": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, true, false, true>;
  "<maxPaymasterEthFees[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.AtMostOne, {}, true, false,  false, false>;
  "<paymasterEthFees[is Transaction]": $.LinkDesc<$Transaction, $.Cardinality.AtMostOne, {}, true, false,  false, false>;
  "<maxPaymasterEthFees": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<paymasterEthFees": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $PaymasterFees = $.ObjectType<"default::PaymasterFees", $PaymasterFees位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $PaymasterFees = $.makeType<$PaymasterFees>(_.spec, "1b48af65-b0d0-11ee-beaf-e7df20c27533", _.syntax.literal);

const PaymasterFees: $.$expr_PathNode<$.TypeSet<$PaymasterFees, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($PaymasterFees, $.Cardinality.Many), null);

export type $Policy位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "account": $.LinkDesc<$Account, $.Cardinality.One, {}, false, false,  false, false>;
  "name": $.PropertyDesc<$Label, $.Cardinality.One, false, false, false, false>;
  "key": $.PropertyDesc<$uint16, $.Cardinality.One, false, false, false, false>;
  "stateHistory": $.LinkDesc<$PolicyState, $.Cardinality.AtLeastOne, {}, true, false,  false, false>;
  "isActive": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, true, false, false>;
  "isEnabled": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, true, false, false>;
  "stateOrDraft": $.LinkDesc<$PolicyState, $.Cardinality.One, {}, false, true,  false, false>;
  "draft": $.LinkDesc<$PolicyState, $.Cardinality.AtMostOne, {}, false, true,  false, false>;
  "state": $.LinkDesc<$PolicyState, $.Cardinality.AtMostOne, {}, false, true,  false, false>;
  "<policy[is PolicyState]": $.LinkDesc<$PolicyState, $.Cardinality.Many, {}, false, false,  false, false>;
  "<policy[is Proposal]": $.LinkDesc<$Proposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<policy[is MessageProposal]": $.LinkDesc<$MessageProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<policy[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<policies[is Account]": $.LinkDesc<$Account, $.Cardinality.Many, {}, false, false,  false, false>;
  "<policies[is current_accounts]": $.LinkDesc<$current_accounts, $.Cardinality.Many, {}, false, false,  false, false>;
  "<policies": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<policy": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Policy = $.ObjectType<"default::Policy", $Policy位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {account: {__element__: $Account, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },name: {__element__: $Label, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {account: {__element__: $Account, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },key: {__element__: $uint16, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {stateHistory: {__element__: $PolicyState, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Policy = $.makeType<$Policy>(_.spec, "6387599e-9eb1-11ee-be1c-7d70b78f807e", _.syntax.literal);

const Policy: $.$expr_PathNode<$.TypeSet<$Policy, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Policy, $.Cardinality.Many), null);

export type $PolicyState位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "activationBlock": $.PropertyDesc<_std.$bigint, $.Cardinality.AtMostOne, false, false, false, false>;
  "createdAt": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, true, true>;
  "isRemoved": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, true>;
  "approvers": $.LinkDesc<$Approver, $.Cardinality.Many, {}, false, false,  false, false>;
  "actions": $.LinkDesc<$Action, $.Cardinality.Many, {}, false, false,  false, false>;
  "proposal": $.LinkDesc<$TransactionProposal, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "isAccountInitState": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, true, false, false>;
  "transfers": $.LinkDesc<$TransfersConfig, $.Cardinality.One, {}, false, false,  false, false>;
  "threshold": $.PropertyDesc<$uint16, $.Cardinality.One, false, false, false, false>;
  "policy": $.LinkDesc<$Policy, $.Cardinality.AtMostOne, {}, false, true,  false, false>;
  "hasBeenActive": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, true, false, false>;
  "isActive": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, true, false, false>;
  "<stateHistory[is Policy]": $.LinkDesc<$Policy, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "<stateOrDraft[is Policy]": $.LinkDesc<$Policy, $.Cardinality.Many, {}, false, false,  false, false>;
  "<draft[is Policy]": $.LinkDesc<$Policy, $.Cardinality.Many, {}, false, false,  false, false>;
  "<state[is Policy]": $.LinkDesc<$Policy, $.Cardinality.Many, {}, false, false,  false, false>;
  "<draft": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<state": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<stateHistory": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<stateOrDraft": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $PolicyState = $.ObjectType<"default::PolicyState", $PolicyState位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $PolicyState = $.makeType<$PolicyState>(_.spec, "63a83393-9eb1-11ee-83a6-a9c1e95093b2", _.syntax.literal);

const PolicyState: $.$expr_PathNode<$.TypeSet<$PolicyState, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($PolicyState, $.Cardinality.Many), null);

export type $ProposalRiskLabel位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "proposal": $.LinkDesc<$Proposal, $.Cardinality.One, {}, false, false,  false, false>;
  "risk": $.PropertyDesc<$ProposalRisk, $.Cardinality.One, false, false, false, false>;
  "user": $.LinkDesc<$User, $.Cardinality.One, {}, false, false,  false, true>;
}>;
type $ProposalRiskLabel = $.ObjectType<"default::ProposalRiskLabel", $ProposalRiskLabel位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {proposal: {__element__: $Proposal, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },user: {__element__: $User, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $ProposalRiskLabel = $.makeType<$ProposalRiskLabel>(_.spec, "61d15e2d-9eb1-11ee-974e-d9240eb931fb", _.syntax.literal);

const ProposalRiskLabel: $.$expr_PathNode<$.TypeSet<$ProposalRiskLabel, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($ProposalRiskLabel, $.Cardinality.Many), null);

export type $Receipt位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "responses": $.PropertyDesc<$.ArrayType<$Bytes>, $.Cardinality.One, false, false, false, false>;
  "success": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, false>;
  "timestamp": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "transaction": $.LinkDesc<$Transaction, $.Cardinality.One, {}, false, true,  false, false>;
  "events": $.LinkDesc<$Event, $.Cardinality.Many, {}, false, true,  false, false>;
  "transferApprovalEvents": $.LinkDesc<$TransferApproval, $.Cardinality.Many, {}, false, true,  false, false>;
  "transferEvents": $.LinkDesc<$Transfer, $.Cardinality.Many, {}, false, true,  false, false>;
  "block": $.PropertyDesc<_std.$bigint, $.Cardinality.One, false, false, false, false>;
  "ethFeePerGas": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "networkEthFee": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, true, false, false>;
  "gasUsed": $.PropertyDesc<_std.$bigint, $.Cardinality.One, false, false, false, false>;
  "ethFees": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, true, false, false>;
  "<receipt[is Transaction]": $.LinkDesc<$Transaction, $.Cardinality.AtMostOne, {}, true, false,  false, false>;
  "<receipt": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Receipt = $.ObjectType<"default::Receipt", $Receipt位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Receipt = $.makeType<$Receipt>(_.spec, "60599b85-9eb1-11ee-af90-61031e27d94a", _.syntax.literal);

const Receipt: $.$expr_PathNode<$.TypeSet<$Receipt, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Receipt, $.Cardinality.Many), null);

export type $Refund位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "transaction": $.LinkDesc<$Transaction, $.Cardinality.One, {}, true, false,  false, false>;
  "ethAmount": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "<refunds[is Transaction]": $.LinkDesc<$Transaction, $.Cardinality.Many, {}, false, false,  false, false>;
  "<refunds": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Refund = $.ObjectType<"default::Refund", $Refund位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {transaction: {__element__: $Transaction, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Refund = $.makeType<$Refund>(_.spec, "67f925fa-9eb1-11ee-9395-67a132f72c85", _.syntax.literal);

const Refund: $.$expr_PathNode<$.TypeSet<$Refund, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Refund, $.Cardinality.Many), null);

export type $Rejection位Shape = $.typeutil.flatten<$ProposalResponse位Shape & {
  "<rejections[is Proposal]": $.LinkDesc<$Proposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<rejections[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<rejections[is MessageProposal]": $.LinkDesc<$MessageProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<rejections": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Rejection = $.ObjectType<"default::Rejection", $Rejection位Shape, null, [
  ...$ProposalResponse['__exclusives__'],
]>;
const $Rejection = $.makeType<$Rejection>(_.spec, "6178cfd6-9eb1-11ee-962e-19a8ee54c8c0", _.syntax.literal);

const Rejection: $.$expr_PathNode<$.TypeSet<$Rejection, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Rejection, $.Cardinality.Many), null);

export type $Simulation位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "transfers": $.LinkDesc<$TransferDetails, $.Cardinality.Many, {}, true, false,  false, false>;
  "responses": $.PropertyDesc<$.ArrayType<$Bytes>, $.Cardinality.One, false, false, false, false>;
  "success": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, false>;
  "timestamp": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "<simulation[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.AtMostOne, {}, true, false,  false, false>;
  "<simulation": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Simulation = $.ObjectType<"default::Simulation", $Simulation位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {transfers: {__element__: $TransferDetails, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Simulation = $.makeType<$Simulation>(_.spec, "67fc259c-9eb1-11ee-9b67-41457159c1e8", _.syntax.literal);

const Simulation: $.$expr_PathNode<$.TypeSet<$Simulation, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Simulation, $.Cardinality.Many), null);

export type $Token位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "units": $.PropertyDesc<$.ArrayType<$.NamedTupleType<{symbol: $Label, decimals: $uint16}>>, $.Cardinality.AtMostOne, false, false, false, false>;
  "address": $.PropertyDesc<$UAddress, $.Cardinality.One, false, false, false, false>;
  "chain": $.PropertyDesc<_std.$str, $.Cardinality.One, false, true, false, false>;
  "symbol": $.PropertyDesc<$Label, $.Cardinality.One, false, false, false, false>;
  "name": $.PropertyDesc<$Label, $.Cardinality.One, false, false, false, false>;
  "isFeeToken": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, true>;
  "decimals": $.PropertyDesc<$uint16, $.Cardinality.One, false, false, false, false>;
  "ethereumAddress": $.PropertyDesc<$Address, $.Cardinality.AtMostOne, false, false, false, false>;
  "iconUri": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "pythUsdPriceId": $.PropertyDesc<$Bytes32, $.Cardinality.AtMostOne, false, false, false, false>;
  "user": $.LinkDesc<$User, $.Cardinality.AtMostOne, {}, false, false,  false, true>;
  "<feeToken[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<token[is TransferDetails]": $.LinkDesc<$TransferDetails, $.Cardinality.Many, {}, false, false,  false, false>;
  "<token[is Transferlike]": $.LinkDesc<$Transferlike, $.Cardinality.Many, {}, false, false,  false, false>;
  "<token[is Transfer]": $.LinkDesc<$Transfer, $.Cardinality.Many, {}, false, false,  false, false>;
  "<token[is TransferApproval]": $.LinkDesc<$TransferApproval, $.Cardinality.Many, {}, false, false,  false, false>;
  "<feeToken": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<token": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Token = $.ObjectType<"default::Token", $Token位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {user: {__element__: $User, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },chain: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },symbol: {__element__: $Label, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {user: {__element__: $User, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },chain: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },name: {__element__: $Label, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {user: {__element__: $User, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },address: {__element__: $UAddress, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Token = $.makeType<$Token>(_.spec, "60787a61-9eb1-11ee-87a4-0d2223eede2b", _.syntax.literal);

const Token: $.$expr_PathNode<$.TypeSet<$Token, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Token, $.Cardinality.Many), null);

export type $Transaction位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "receipt": $.LinkDesc<$Receipt, $.Cardinality.AtMostOne, {}, true, false,  false, false>;
  "submittedAt": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "hash": $.PropertyDesc<$Bytes32, $.Cardinality.One, true, false, false, false>;
  "proposal": $.LinkDesc<$TransactionProposal, $.Cardinality.One, {}, false, false,  false, false>;
  "events": $.LinkDesc<$Event, $.Cardinality.Many, {}, false, true,  false, false>;
  "refunds": $.LinkDesc<$Refund, $.Cardinality.Many, {}, false, true,  false, false>;
  "maxEthFeePerGas": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "maxNetworkEthFee": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, true, false, false>;
  "ethPerFeeToken": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "usdPerFeeToken": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "paymasterEthFees": $.LinkDesc<$PaymasterFees, $.Cardinality.One, {}, true, false,  false, true>;
  "maxEthFees": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, true, false, false>;
  "ethCreditUsed": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, true>;
  "ethDiscount": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, true, false, false>;
  "<transaction[is Event]": $.LinkDesc<$Event, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transaction[is Transferlike]": $.LinkDesc<$Transferlike, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transaction[is Transfer]": $.LinkDesc<$Transfer, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transaction[is TransferApproval]": $.LinkDesc<$TransferApproval, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transaction[is Receipt]": $.LinkDesc<$Receipt, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transactions[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transaction[is TransactionProposal]": $.LinkDesc<$TransactionProposal, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transaction[is Refund]": $.LinkDesc<$Refund, $.Cardinality.AtMostOne, {}, true, false,  false, false>;
  "<transaction": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transactions": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Transaction = $.ObjectType<"default::Transaction", $Transaction位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {paymasterEthFees: {__element__: $PaymasterFees, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {receipt: {__element__: $Receipt, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {hash: {__element__: $Bytes32, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Transaction = $.makeType<$Transaction>(_.spec, "6199c86f-9eb1-11ee-bbec-6b8d9c164916", _.syntax.literal);

const Transaction: $.$expr_PathNode<$.TypeSet<$Transaction, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Transaction, $.Cardinality.Many), null);

export type $TransactionProposal位Shape = $.typeutil.flatten<Omit<$Proposal位Shape, "<proposal"> & {
  "operations": $.LinkDesc<$Operation, $.Cardinality.AtLeastOne, {}, true, false,  false, false>;
  "feeToken": $.LinkDesc<$Token, $.Cardinality.One, {}, false, false,  false, false>;
  "nonce": $.PropertyDesc<_std.$bigint, $.Cardinality.One, false, true, false, false>;
  "paymaster": $.PropertyDesc<$Address, $.Cardinality.One, false, false, false, false>;
  "transactions": $.LinkDesc<$Transaction, $.Cardinality.Many, {}, false, true,  false, false>;
  "transaction": $.LinkDesc<$Transaction, $.Cardinality.AtMostOne, {}, false, true,  false, false>;
  "gasLimit": $.PropertyDesc<$uint256, $.Cardinality.One, false, false, false, true>;
  "simulation": $.LinkDesc<$Simulation, $.Cardinality.AtMostOne, {}, true, false,  false, false>;
  "maxPaymasterEthFees": $.LinkDesc<$PaymasterFees, $.Cardinality.One, {}, true, false,  false, true>;
  "submitted": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, true>;
  "status": $.PropertyDesc<$TransactionProposalStatus, $.Cardinality.One, false, true, false, false>;
  "<proposal[is Transaction]": $.LinkDesc<$Transaction, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposal[is PolicyState]": $.LinkDesc<$PolicyState, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transactionProposals[is Account]": $.LinkDesc<$Account, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transactionProposals[is current_accounts]": $.LinkDesc<$current_accounts, $.Cardinality.Many, {}, false, false,  false, false>;
  "<proposal": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transactionProposals": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $TransactionProposal = $.ObjectType<"default::TransactionProposal", $TransactionProposal位Shape, null, [
  ...$Proposal['__exclusives__'],
  {maxPaymasterEthFees: {__element__: $PaymasterFees, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {operations: {__element__: $Operation, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {simulation: {__element__: $Simulation, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $TransactionProposal = $.makeType<$TransactionProposal>(_.spec, "61f70dcd-9eb1-11ee-b5ea-134d4cae3db5", _.syntax.literal);

const TransactionProposal: $.$expr_PathNode<$.TypeSet<$TransactionProposal, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($TransactionProposal, $.Cardinality.Many), null);

export type $TransferDetails位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "account": $.LinkDesc<$Account, $.Cardinality.One, {}, false, false,  false, false>;
  "tokenAddress": $.PropertyDesc<$UAddress, $.Cardinality.One, false, false, false, false>;
  "token": $.LinkDesc<$Token, $.Cardinality.AtMostOne, {}, false, true,  false, false>;
  "direction": $.PropertyDesc<$TransferDirection, $.Cardinality.AtLeastOne, false, false, false, false>;
  "from": $.PropertyDesc<$Address, $.Cardinality.One, false, false, false, false>;
  "to": $.PropertyDesc<$Address, $.Cardinality.One, false, false, false, false>;
  "amount": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "isFeeTransfer": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, true>;
  "<transfers[is Simulation]": $.LinkDesc<$Simulation, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "<transfers": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $TransferDetails = $.ObjectType<"default::TransferDetails", $TransferDetails位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $TransferDetails = $.makeType<$TransferDetails>(_.spec, "62944c5c-9eb1-11ee-866e-5d8a6efe5b70", _.syntax.literal);

const TransferDetails: $.$expr_PathNode<$.TypeSet<$TransferDetails, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($TransferDetails, $.Cardinality.Many), null);

export type $Transferlike位Shape = $.typeutil.flatten<$Event位Shape & $TransferDetails位Shape & {
}>;
type $Transferlike = $.ObjectType<"default::Transferlike", $Transferlike位Shape, null, [
  ...$Event['__exclusives__'],
  ...$TransferDetails['__exclusives__'],
]>;
const $Transferlike = $.makeType<$Transferlike>(_.spec, "62b17b70-9eb1-11ee-9787-f7da106e4ebc", _.syntax.literal);

const Transferlike: $.$expr_PathNode<$.TypeSet<$Transferlike, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Transferlike, $.Cardinality.Many), null);

export type $Transfer位Shape = $.typeutil.flatten<$Transferlike位Shape & {
  "<transferEvents[is Receipt]": $.LinkDesc<$Receipt, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transfers[is Account]": $.LinkDesc<$Account, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transfers[is current_accounts]": $.LinkDesc<$current_accounts, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transferEvents": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transfers": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Transfer = $.ObjectType<"default::Transfer", $Transfer位Shape, null, [
  ...$Transferlike['__exclusives__'],
]>;
const $Transfer = $.makeType<$Transfer>(_.spec, "62d140de-9eb1-11ee-818c-d19877b495cc", _.syntax.literal);

const Transfer: $.$expr_PathNode<$.TypeSet<$Transfer, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Transfer, $.Cardinality.Many), null);

export type $TransferApproval位Shape = $.typeutil.flatten<$Transferlike位Shape & {
  "previous": $.LinkDesc<$TransferApproval, $.Cardinality.AtMostOne, {}, false, true,  false, false>;
  "delta": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, true, false, false>;
  "<transferApprovalEvents[is Receipt]": $.LinkDesc<$Receipt, $.Cardinality.Many, {}, false, false,  false, false>;
  "<previous[is TransferApproval]": $.LinkDesc<$TransferApproval, $.Cardinality.Many, {}, false, false,  false, false>;
  "<previous": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transferApprovalEvents": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $TransferApproval = $.ObjectType<"default::TransferApproval", $TransferApproval位Shape, null, [
  ...$Transferlike['__exclusives__'],
]>;
const $TransferApproval = $.makeType<$TransferApproval>(_.spec, "62faf564-9eb1-11ee-9f14-3df830663de5", _.syntax.literal);

const TransferApproval: $.$expr_PathNode<$.TypeSet<$TransferApproval, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($TransferApproval, $.Cardinality.Many), null);

export type $TransferLimit位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "amount": $.PropertyDesc<$uint224, $.Cardinality.One, false, false, false, false>;
  "duration": $.PropertyDesc<$uint32, $.Cardinality.One, false, false, false, false>;
  "token": $.PropertyDesc<$Address, $.Cardinality.One, false, false, false, false>;
  "<limits[is TransfersConfig]": $.LinkDesc<$TransfersConfig, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "<limits": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $TransferLimit = $.ObjectType<"default::TransferLimit", $TransferLimit位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $TransferLimit = $.makeType<$TransferLimit>(_.spec, "63a2541c-9eb1-11ee-b1aa-6303cd6bf371", _.syntax.literal);

const TransferLimit: $.$expr_PathNode<$.TypeSet<$TransferLimit, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($TransferLimit, $.Cardinality.Many), null);

export type $TransfersConfig位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "limits": $.LinkDesc<$TransferLimit, $.Cardinality.Many, {}, true, false,  false, false>;
  "budget": $.PropertyDesc<$uint32, $.Cardinality.One, false, false, false, false>;
  "defaultAllow": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, true>;
  "<transfers[is PolicyState]": $.LinkDesc<$PolicyState, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transfers": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $TransfersConfig = $.ObjectType<"default::TransfersConfig", $TransfersConfig位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {limits: {__element__: $TransferLimit, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $TransfersConfig = $.makeType<$TransfersConfig>(_.spec, "63a48b24-9eb1-11ee-980b-dd1ed5a9dabd", _.syntax.literal);

const TransfersConfig: $.$expr_PathNode<$.TypeSet<$TransfersConfig, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($TransfersConfig, $.Cardinality.Many), null);

export type $User位Shape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588位Shape & {
  "approvers": $.LinkDesc<$Approver, $.Cardinality.Many, {}, false, true,  false, false>;
  "accounts": $.LinkDesc<$Account, $.Cardinality.Many, {}, false, true,  false, false>;
  "primaryAccount": $.LinkDesc<$Account, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "contacts": $.LinkDesc<$Contact, $.Cardinality.Many, {}, false, true,  false, false>;
  "<user[is Approver]": $.LinkDesc<$Approver, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user[is current_approver]": $.LinkDesc<$current_approver, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user[is Token]": $.LinkDesc<$Token, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user[is Contact]": $.LinkDesc<$Contact, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user[is ProposalRiskLabel]": $.LinkDesc<$ProposalRiskLabel, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $User = $.ObjectType<"default::User", $User位Shape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $User = $.makeType<$User>(_.spec, "607e4f6f-9eb1-11ee-82fd-2be69236d62e", _.syntax.literal);

const User: $.$expr_PathNode<$.TypeSet<$User, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($User, $.Cardinality.Many), null);

export type $current_accounts位Shape = $.typeutil.flatten<$Account位Shape & {
}>;
type $current_accounts = $.ObjectType<"default::current_accounts", $current_accounts位Shape, null, [
  ...$Account['__exclusives__'],
]>;
const $current_accounts = $.makeType<$current_accounts>(_.spec, "60d6f37b-9eb1-11ee-8541-7f2669f46fc5", _.syntax.literal);

const current_accounts: $.$expr_PathNode<$.TypeSet<$current_accounts, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($current_accounts, $.Cardinality.Many), null);

export type $current_approver位Shape = $.typeutil.flatten<$Approver位Shape & {
}>;
type $current_approver = $.ObjectType<"default::current_approver", $current_approver位Shape, null, [
  ...$Approver['__exclusives__'],
]>;
const $current_approver = $.makeType<$current_approver>(_.spec, "60772b81-9eb1-11ee-8538-adfa45d708fd", _.syntax.literal);

const current_approver: $.$expr_PathNode<$.TypeSet<$current_approver, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($current_approver, $.Cardinality.Many), null);

export type $current_user位Shape = $.typeutil.flatten<$User位Shape & {
}>;
type $current_user = $.ObjectType<"default::current_user", $current_user位Shape, null, [
  ...$User['__exclusives__'],
]>;
const $current_user = $.makeType<$current_user>(_.spec, "60926447-9eb1-11ee-8317-1d9dc83504ae", _.syntax.literal);

const current_user: $.$expr_PathNode<$.TypeSet<$current_user, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($current_user, $.Cardinality.Many), null);

type as_chain位FuncExpr<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<$UAddress>>,
> = $.$expr_Function<
  _std.$str, $.cardutil.paramCardinality<P1>
>;
function as_chain<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<$UAddress>>,
>(
  address: P1,
): as_chain位FuncExpr<P1>;
function as_chain(...args: any[]) {
  const {returnType, cardinality, args: positionalArgs, namedArgs} = _.syntax.$resolveOverload('default::as_chain', args, _.spec, [
    {args: [{typeId: "6055ec33-9eb1-11ee-b040-6512afc4d633", optional: false, setoftype: false, variadic: false}], returnTypeId: "00000000-0000-0000-0000-000000000101"},
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "default::as_chain",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
};

type as_adddress位FuncExpr<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<$UAddress>>,
> = $.$expr_Function<
  $Address, $.cardutil.paramCardinality<P1>
>;
function as_adddress<
  P1 extends _.castMaps.orScalarLiteral<$.TypeSet<$UAddress>>,
>(
  address: P1,
): as_adddress位FuncExpr<P1>;
function as_adddress(...args: any[]) {
  const {returnType, cardinality, args: positionalArgs, namedArgs} = _.syntax.$resolveOverload('default::as_adddress', args, _.spec, [
    {args: [{typeId: "6055ec33-9eb1-11ee-b040-6512afc4d633", optional: false, setoftype: false, variadic: false}], returnTypeId: "60655e66-9eb1-11ee-a238-17db85beea73"},
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "default::as_adddress",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  }) as any;
};

const $default__globals: {  current_accounts: _.syntax.$expr_Global<
              // "default::current_accounts",
              $current_accounts,
              $.Cardinality.Many
              >,  current_accounts_array: _.syntax.$expr_Global<
              // "default::current_accounts_array",
              $.ArrayType<_std.$uuid>,
              $.Cardinality.AtMostOne
              >,  current_accounts_set: _.syntax.$expr_Global<
              // "default::current_accounts_set",
              $current_accounts_set,
              $.Cardinality.Many
              >,  current_approver: _.syntax.$expr_Global<
              // "default::current_approver",
              $current_approver,
              $.Cardinality.AtMostOne
              >,  current_approver_address: _.syntax.$expr_Global<
              // "default::current_approver_address",
              $Address,
              $.Cardinality.AtMostOne
              >,  current_user: _.syntax.$expr_Global<
              // "default::current_user",
              $current_user,
              $.Cardinality.AtMostOne
              >} = {  current_accounts: _.syntax.makeGlobal(
              "default::current_accounts",
              $.makeType(_.spec, "60d6f37b-9eb1-11ee-8541-7f2669f46fc5", _.syntax.literal),
              $.Cardinality.Many) as any,  current_accounts_array: _.syntax.makeGlobal(
              "default::current_accounts_array",
              $.makeType(_.spec, "1378c9c3-b11a-5a95-bdac-066a4143094d", _.syntax.literal),
              $.Cardinality.AtMostOne) as any,  current_accounts_set: _.syntax.makeGlobal(
              "default::current_accounts_set",
              $.makeType(_.spec, "6055c7ea-9eb1-11ee-81f8-83dd695319ad", _.syntax.literal),
              $.Cardinality.Many) as any,  current_approver: _.syntax.makeGlobal(
              "default::current_approver",
              $.makeType(_.spec, "60772b81-9eb1-11ee-8538-adfa45d708fd", _.syntax.literal),
              $.Cardinality.AtMostOne) as any,  current_approver_address: _.syntax.makeGlobal(
              "default::current_approver_address",
              $.makeType(_.spec, "60655e66-9eb1-11ee-a238-17db85beea73", _.syntax.literal),
              $.Cardinality.AtMostOne) as any,  current_user: _.syntax.makeGlobal(
              "default::current_user",
              $.makeType(_.spec, "60926447-9eb1-11ee-8317-1d9dc83504ae", _.syntax.literal),
              $.Cardinality.AtMostOne) as any};



export { AbiSource, Address, Amount, ApprovalIssue, Bytes, Bytes32, Bytes4, CloudProvider, Label, MAC, ProposalRisk, TransactionProposalStatus, TransferDirection, UAddress, Url, current_accounts_set, uint16, uint224, uint256, uint32, uint64, $Account, Account, $Action, Action, $ActionFunction, ActionFunction, $ProposalResponse, ProposalResponse, $Approval, Approval, $Approver, Approver, $CloudShare, CloudShare, $Contact, Contact, $Contract, Contract, $Event, Event, $Function, Function, $Proposal, Proposal, $MessageProposal, MessageProposal, $Operation, Operation, $PaymasterFees, PaymasterFees, $Policy, Policy, $PolicyState, PolicyState, $ProposalRiskLabel, ProposalRiskLabel, $Receipt, Receipt, $Refund, Refund, $Rejection, Rejection, $Simulation, Simulation, $Token, Token, $Transaction, Transaction, $TransactionProposal, TransactionProposal, $TransferDetails, TransferDetails, $Transferlike, Transferlike, $Transfer, Transfer, $TransferApproval, TransferApproval, $TransferLimit, TransferLimit, $TransfersConfig, TransfersConfig, $User, User, $current_accounts, current_accounts, $current_approver, current_approver, $current_user, current_user };

type __defaultExports = {
  "AbiSource": typeof AbiSource;
  "Address": typeof Address;
  "Amount": typeof Amount;
  "ApprovalIssue": typeof ApprovalIssue;
  "Bytes": typeof Bytes;
  "Bytes32": typeof Bytes32;
  "Bytes4": typeof Bytes4;
  "CloudProvider": typeof CloudProvider;
  "Label": typeof Label;
  "MAC": typeof MAC;
  "ProposalRisk": typeof ProposalRisk;
  "TransactionProposalStatus": typeof TransactionProposalStatus;
  "TransferDirection": typeof TransferDirection;
  "UAddress": typeof UAddress;
  "Url": typeof Url;
  "current_accounts_set": typeof current_accounts_set;
  "uint16": typeof uint16;
  "uint224": typeof uint224;
  "uint256": typeof uint256;
  "uint32": typeof uint32;
  "uint64": typeof uint64;
  "Account": typeof Account;
  "Action": typeof Action;
  "ActionFunction": typeof ActionFunction;
  "ProposalResponse": typeof ProposalResponse;
  "Approval": typeof Approval;
  "Approver": typeof Approver;
  "CloudShare": typeof CloudShare;
  "Contact": typeof Contact;
  "Contract": typeof Contract;
  "Event": typeof Event;
  "Function": typeof Function;
  "Proposal": typeof Proposal;
  "MessageProposal": typeof MessageProposal;
  "Operation": typeof Operation;
  "PaymasterFees": typeof PaymasterFees;
  "Policy": typeof Policy;
  "PolicyState": typeof PolicyState;
  "ProposalRiskLabel": typeof ProposalRiskLabel;
  "Receipt": typeof Receipt;
  "Refund": typeof Refund;
  "Rejection": typeof Rejection;
  "Simulation": typeof Simulation;
  "Token": typeof Token;
  "Transaction": typeof Transaction;
  "TransactionProposal": typeof TransactionProposal;
  "TransferDetails": typeof TransferDetails;
  "Transferlike": typeof Transferlike;
  "Transfer": typeof Transfer;
  "TransferApproval": typeof TransferApproval;
  "TransferLimit": typeof TransferLimit;
  "TransfersConfig": typeof TransfersConfig;
  "User": typeof User;
  "current_accounts": typeof current_accounts;
  "current_approver": typeof current_approver;
  "current_user": typeof current_user;
  "as_chain": typeof as_chain;
  "as_adddress": typeof as_adddress;
  "global": typeof $default__globals
};
const __defaultExports: __defaultExports = {
  "AbiSource": AbiSource,
  "Address": Address,
  "Amount": Amount,
  "ApprovalIssue": ApprovalIssue,
  "Bytes": Bytes,
  "Bytes32": Bytes32,
  "Bytes4": Bytes4,
  "CloudProvider": CloudProvider,
  "Label": Label,
  "MAC": MAC,
  "ProposalRisk": ProposalRisk,
  "TransactionProposalStatus": TransactionProposalStatus,
  "TransferDirection": TransferDirection,
  "UAddress": UAddress,
  "Url": Url,
  "current_accounts_set": current_accounts_set,
  "uint16": uint16,
  "uint224": uint224,
  "uint256": uint256,
  "uint32": uint32,
  "uint64": uint64,
  "Account": Account,
  "Action": Action,
  "ActionFunction": ActionFunction,
  "ProposalResponse": ProposalResponse,
  "Approval": Approval,
  "Approver": Approver,
  "CloudShare": CloudShare,
  "Contact": Contact,
  "Contract": Contract,
  "Event": Event,
  "Function": Function,
  "Proposal": Proposal,
  "MessageProposal": MessageProposal,
  "Operation": Operation,
  "PaymasterFees": PaymasterFees,
  "Policy": Policy,
  "PolicyState": PolicyState,
  "ProposalRiskLabel": ProposalRiskLabel,
  "Receipt": Receipt,
  "Refund": Refund,
  "Rejection": Rejection,
  "Simulation": Simulation,
  "Token": Token,
  "Transaction": Transaction,
  "TransactionProposal": TransactionProposal,
  "TransferDetails": TransferDetails,
  "Transferlike": Transferlike,
  "Transfer": Transfer,
  "TransferApproval": TransferApproval,
  "TransferLimit": TransferLimit,
  "TransfersConfig": TransfersConfig,
  "User": User,
  "current_accounts": current_accounts,
  "current_approver": current_approver,
  "current_user": current_user,
  "as_chain": as_chain,
  "as_adddress": as_adddress,
  "global": $default__globals
};
export default __defaultExports;
