datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  // Dedicated shadow database is required with Heroku - https://www.prisma.io/docs/concepts/components/prisma-migrate/shadow-database#cloud-hosted-shadow-databases-must-be-created-manually
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator nestgraphql {
  provider = "prisma-nestjs-graphql"
  output   = "../generated"
}

// https://www.npmjs.com/package/@quixo3/prisma-session-store
model Session {
  id        String      @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model Safe {
  id         String  @id
  deploySalt String
  isCf       Boolean
  groups     Group[]
}

model Group {
  // {safe.id}-{hash}
  id        String          @id
  safe      Safe            @relation(fields: [safeId], references: [id], onDelete: Cascade)
  hash      String
  approvers GroupApprover[]
  safeId    String
}

model Approver {
  id     String          @id
  groups GroupApprover[]
}

model GroupApprover {
  // {safe.id}-{group.hash}-{approver.id}
  id         String   @id
  group      Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId    String
  approver   Approver @relation(fields: [approverId], references: [id], onDelete: Cascade)
  approverId String
  weight     Decimal
}
