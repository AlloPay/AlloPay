[
  {
    "inputs": [],
    "name": "OnlyCallableBySelf",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "expectedHash",
        "type": "bytes32"
      }
    ],
    "name": "PolicyDoesNotMatchExpectedHash",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "PolicyKey",
        "name": "key",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "bytes32",
        "name": "hash",
        "type": "bytes32"
      }
    ],
    "name": "PolicyAdded",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "PolicyKey",
        "name": "key",
        "type": "uint256"
      }
    ],
    "name": "PolicyRemoved",
    "type": "event"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "PolicyKey",
            "name": "key",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "enum RuleSelector",
                "name": "selector",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "args",
                "type": "bytes"
              }
            ],
            "internalType": "struct Rule[]",
            "name": "signatureRules",
            "type": "tuple[]"
          },
          {
            "components": [
              {
                "internalType": "enum RuleSelector",
                "name": "selector",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "args",
                "type": "bytes"
              }
            ],
            "internalType": "struct Rule[]",
            "name": "transactionRules",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct Policy",
        "name": "policy",
        "type": "tuple"
      }
    ],
    "name": "addPolicy",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "PolicyKey",
        "name": "key",
        "type": "uint256"
      }
    ],
    "name": "getPolicyHash",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "PolicyKey",
        "name": "key",
        "type": "uint256"
      }
    ],
    "name": "removePolicy",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "PolicyKey",
            "name": "key",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "enum RuleSelector",
                "name": "selector",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "args",
                "type": "bytes"
              }
            ],
            "internalType": "struct Rule[]",
            "name": "signatureRules",
            "type": "tuple[]"
          },
          {
            "components": [
              {
                "internalType": "enum RuleSelector",
                "name": "selector",
                "type": "uint8"
              },
              {
                "internalType": "bytes",
                "name": "args",
                "type": "bytes"
              }
            ],
            "internalType": "struct Rule[]",
            "name": "transactionRules",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct Policy",
        "name": "policy",
        "type": "tuple"
      }
    ],
    "name": "testAddPolicy",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "PolicyKey",
        "name": "key",
        "type": "uint256"
      }
    ],
    "name": "testRemovePolicy",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]
