# Deploy to dev when CI succeeds on a push to main
name: Dev CD

on:
  workflow_run:
    branches: [main]
    workflows: ["CI"]
    type: [completed]

jobs:
  subgraph:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: 🚧 Checkout
        uses: actions/checkout@v2

      - name: 🚧 Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"

      - name: 📦 Install
        run: yarn install

      - name: 🚧 Configure
        run: yarn subgraph configure:ropsten

      - name: 🚧 Auth
        run: yarn subgraph auth ${{ secrets.THEGRAPH_ACCESS_TOKEN }}

      - name: 🏗️ Build
        run: yarn subgraph build

      - name: 🚀 Publish
        run: yarn subgraph publish

  app:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: 🚧 Checkout
        uses: actions/checkout@v2

      - name: 🚧 Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"

      - name: 🚧 Setup Expo
        uses: expo/expo-github-action@v7
        with:
          token: ${{ secrets.EXPO_TOKEN }}
          expo-version: latest

      - name: 📦 Install
        run: yarn install

      - name: 🚀 Publish
        run: yarn publish

  # CD acheived through Heroku
  # api:
  #   if: ${{ github.event.workflow_run.conclusion == 'success' }}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [16.x]
  #   environment: dev

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Deploy
  #       uses: akhileshns/heroku-deploy@v3.12.12
  #       with:
  #         heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
  #         heroku_app_name: "metasafe-api"
  #         heroku_email: "haydenbriese@gmail.com"
  #         # healthcheck: "https://metasafe-api.herokuapp.com/health"
  #         # rollbackonhealthcheckfailed: true
  #       env:
  #         DATABASE_URL: ${{ secrets.DATABASE_URL }}
  #         SHADOW_DATABASE_URL: ${{ secrets.SHADOW_DATABASE_URL }}
