# Deploy when CI succeeds on a push to main
name: CD

on:
  workflow_run:
    branches: [main]
    workflows: ['CI']
    type: [completed]

env:
  INFURA_ID: ${{ secrets.INFURA_ID }}
  INFURA_SECRET: ${{ secrets.INFURA_SECRET }}
  ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
  SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
  API_URL: ${{ secrets.API_URL }}
  SUBGRAPH_GQL_URL: ${{ secrets.SUBGRAPH_GQL_URL }}
  CHAIN: testnet
  WALLET_ADDRESS_TESTNET: ${{ secrets.WALLET_ADDRESS_TESTNET }}
  WALLET_PRIVATE_KEY_TESTNET: ${{ secrets.WALLET_PRIVATE_KEY_TESTNET }}

jobs:
  api:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: 🚧 Checkout
        uses: actions/checkout@v2

      - name: 🚀 Heroku - Build, Push and Release
        uses: gonuit/heroku-docker-deploy@v1.3.3
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          process_type: web
          dockerfile_directory: ./
          dockerfile_name: Dockerfile
          # docker_options: ""

  subgraph:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: 🚧 Checkout
        uses: actions/checkout@v2

      - name: 🚧 Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: 📦 Install
        run: yarn install

      - name: 🚧 Configure
        run: yarn subgraph configure:testnet

      - name: 🚧 Auth
        run: yarn subgraph auth ${{ secrets.THEGRAPH_ACCESS_TOKEN }}

      - name: 🏗️ Generate
        run: yarn subgraph generate

      - name: 🏗️ Build
        run: yarn subgraph build

      - name: 🚀 Publish
        run: yarn subgraph publish

  app:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: 🚧 Checkout
        uses: actions/checkout@v2

      - name: 🚧 Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: 🚧 Setup Expo
        uses: expo/expo-github-action@v7
        with:
          token: ${{ secrets.EXPO_TOKEN }}
          expo-version: latest

      - name: 📦 Install
        run: yarn install

      - name: 🏗️ Build Libs
        run: yarn build:libs

      - name: 🚀 Publish
        run: yarn app publish
