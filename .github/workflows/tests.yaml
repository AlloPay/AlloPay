name: Tests

on:
  pull_request:
  push:
    branches-ignore: [main]

jobs:
  lib:
    runs-on: ubuntu-latest

    steps:
      - name: 🚧 Checkout
        uses: actions/checkout@v3

      - name: 🚧 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: 📦 Install
        run: yarn install

      - name: 🏗️ Build
        run: yarn lib build

      - name: 🧪 Test
        run: yarn lib test

  contracts:
    runs-on: ubuntu-latest

    steps:
      - name: 🚧 Checkout
        uses: actions/checkout@v3

      - name: 🚧 Checkout zksync-local
        uses: actions/checkout@v3
        with:
          repository: hbriese/zksync-local
          path: zksync-local

      - name: 🚧 Start local zksync node
        run: (cd zksync-local && ./start.sh)

      - name: 🚧 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: 📦 Install
        run: yarn install

      - name: 🏗️ Build
        run: yarn contracts build

      - name: 💤 Wait for local zksync node to start
        run: sleep 90

      - name: 🧪 Test
        run: yarn contracts test

  docs:
    runs-on: ubuntu-latest

    steps:
      - name: 🚧 Checkout
        uses: actions/checkout@v3

      - name: 🚧 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: 📦 Install
        run: yarn install

      - name: 🏗️ Generate
        run: yarn docs generate

      - name: 🏗️ Build
        run: yarn docs build

      - name: 🧪 Typecheck
        run: yarn docs typecheck

  subgraph:
    runs-on: ubuntu-latest

    steps:
      - name: 🚧 Checkout
        uses: actions/checkout@v3

      - name: 🚧 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: 📦 Install
        run: yarn install

      - name: 🏗️ Generate
        run: yarn subgraph generate

      - name: 🏗️ Build
        run: yarn subgraph build:testnet

  api:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      DATABASE_URL: 'postgres://postgres:postgres@localhost:5432'

    steps:
      - name: 🚧 Checkout
        uses: actions/checkout@v3

      - name: 🚧 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: 📦 Install
        run: yarn install

      - name: 🏗️ Build
        run: yarn api build

      - name: 🧪 Test
        run: yarn api test

  app:
    runs-on: ubuntu-latest

    steps:
      - name: 🚧 Checkout
        uses: actions/checkout@v3

      - name: 🚧 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: 📦 Install
        run: yarn install

      - name: 🏗️ Pre-Build
        run: yarn app prebuild

      - name: 🧪 Test
        run: yarn app test
