name: Tests

on:
  pull_request:
  push:
    branches-ignore: [main, dev]

jobs:
  lib:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: 🚧 Checkout
        uses: actions/checkout@v3

      - name: 🚧 Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: 📦 Install
        run: yarn install

      - name: 🏗️ Build
        run: yarn lib build

      - name: 🧪 Test
        run: yarn lib test

  contracts:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: 🚧 Checkout
        uses: actions/checkout@v3

      - name: 🚧 Checkout zksync-local
        uses: actions/checkout@v3
        with:
          repository: hbriese/zksync-local
          path: zksync-local

      - name: 🚧 Start local zksync node
        run: (cd zksync-local && ./start.sh)

      - name: 🚧 Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: 📦 Install
        run: yarn install

      - name: 🏗️ Build
        run: yarn contracts build

      - name: 💤 Wait for local zksync node to start
        run: sleep 90

      - name: 🧪 Test
        run: yarn contracts test

  docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: 🚧 Checkout
        uses: actions/checkout@v3

      - name: 🚧 Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: 📦 Install
        run: yarn install

      - name: 🏗️ Generate
        run: yarn docs generate

      - name: 🏗️ Build
        run: yarn docs build

      - name: 🧪 Typecheck
        run: yarn docs typecheck

  subgraph:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: 🚧 Checkout
        uses: actions/checkout@v3

      - name: 🚧 Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: 📦 Install
        run: yarn install

      - name: 🚧 Configure
        run: yarn subgraph configure:testnet

      - name: 🏗️ Generate
        run: yarn subgraph generate

      - name: 🏗️ Build
        run: yarn subgraph build

  api:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: 🚧 Checkout
        uses: actions/checkout@v3

      - name: 🚧 Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: 📦 Install
        run: yarn install

      - name: 🏗️ Build
        run: yarn api build

      - name: 🧪 Test
        run: yarn api test

  app:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: 🚧 Checkout
        uses: actions/checkout@v3

      - name: 🚧 Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: 📦 Install
        run: yarn install

      - name: 🏗️ Pre-Build
        run: yarn app prebuild

      - name: 🧪 Test
        run: yarn app test
