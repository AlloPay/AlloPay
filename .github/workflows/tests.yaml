name: Tests

on:
  push:
    branches-ignore: [main]

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

jobs:
  lib:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - name: 🧪 Test
        run: yarn lib test

  # Temporarily disabled as both era_test_node@latest and era-test-node-action.releaseTag are broken
  # Manually test on era_test_node@v0.1.0-alpha.18

  # contracts:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: 🚧 Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 2

  #     - name: 🚧 Setup Node
  #       uses: actions/setup-node@v4
  #       with:
  #         cache: 'yarn'
  #         node-version-file: '.nvmrc'

  #     - name: 🚧 Start zkSync local testnet node
  #       uses: dutterbutter/era-test-node-action@latest

  #     - name: 📦 Install
  #       run: yarn

  #     - name: 🧪 Test
  #       run: yarn contracts test

  contracts-foundry:
    runs-on: ubuntu-latest

    env:
      FOUNDRY_PROFILE: ci

    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - name: 🚧 Checkout foundry-zksync
        uses: actions/checkout@v4
        with:
          repository: matter-labs/foundry-zksync
          ref: 'dev'
          path: 'foundry-zksync'

      - name: 🚧 Add foundry-zksync to PATH
        run: echo "$XDG_CONFIG_HOME/.foundry/bin" >> $GITHUB_PATH

      - name: 📦 Install foundry-zksync
        run: (cd foundry-zksync && ./install-foundry-zksync)

      - name: 🧪 Test
        run: yarn contracts test

  contracts-abi:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - name: 🚧 Checkout foundry-zksync
        uses: actions/checkout@v4
        with:
          repository: matter-labs/foundry-zksync
          ref: 'v0.0.2-alpha.4'
          path: 'foundry-zksync'

      - name: 🚧 Add foundry-zksync to PATH
        run: echo "$XDG_CONFIG_HOME/.foundry-zksync/bin" >> $GITHUB_PATH

      - name: 📦 Install foundry-zksync
        run: (cd foundry-zksync && ./install-foundry-zksync)

      - name: 🏗️ Generate ABIs
        run: yarn contracts build
      
      - name: 🧪 Verify ABIs unchanged
        uses: tj-actions/verify-changed-files@v19
        with:
          fail-if-changed: true
          files: packages/lib/src/abi

  api:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - name: 💾 Setup EdgeDB
        uses: edgedb/setup-edgedb@v1
        with:
          instance-name: tests

      - name: 💾 Initialize EdgeDB project
        run: (cd api && edgedb project init --non-interactive)

      - name: 📦 Install
        run: yarn

      - name: 🧪 Test
        run: yarn api test

  api-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - name: 🏗️ Build
        run: >
          docker build -f ./api/Dockerfile .
          --build-arg TURBO_TOKEN=$TURBO_TOKEN
          --build-arg TURBO_TEAM=$TURBO_TEAM

  api-ampli:
    runs-on: ubuntu-latest
    container:
      image: amplitudeinc/ampli

    steps:
      - name: 🚧 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: 🧪 Verify analytics implementation
        run: cd api && ampli status -t ${{secrets.AMPLI_TOKEN}} --is-merged --is-latest

  app-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - name: 👕 Lint
        run: yarn app lint

      - name: 🧪 Test
        run: yarn app test

  app-web-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - name: 🏗️ Build
        run: yarn app build:web

  app-ampli:
    runs-on: ubuntu-latest
    container:
      image: amplitudeinc/ampli

    steps:
      - name: 🚧 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: 🧪 Verify analytics implementation
        run: cd app && ampli status -t ${{secrets.AMPLI_TOKEN}} --is-merged --is-latest
# site:
#   runs-on: ubuntu-latest

#   steps:
#     - name: 🚧 Checkout
#       uses: actions/checkout@v4

#     - name: 🚧 Setup Node
#       uses: actions/setup-node@v4
#       with:
#         cache: 'yarn'
#         node-version-file: '.nvmrc'

#     - name: 📦 Install
#       run: yarn

#     - name: 🏗️ Build
#       run: yarn site build

#     - name: 🧪 Typecheck
#       run: yarn site typecheck
