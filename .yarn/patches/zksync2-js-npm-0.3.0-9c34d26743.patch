diff --git a/build/src/utils.js b/build/src/utils.js
index 2c76b273db22c75cd6d26d339b6ddec876b434f7..765eeb88a1af229c2e2e7e2f6ae808771cfc57e4 100644
--- a/build/src/utils.js
+++ b/build/src/utils.js
@@ -104,7 +104,7 @@ function create2Address(sender, bytecodeHash, salt, input = "") {
     const prefix = ethers_1.ethers.keccak256(ethers_1.ethers.toUtf8Bytes("zksyncCreate2"));
     const inputHash = ethers_1.ethers.keccak256(input);
     const addressBytes = ethers_1.ethers
-        .keccak256(ethers_1.ethers.concat([prefix, ethers_1.ethers.zeroPadBytes(sender, 32), salt, bytecodeHash, inputHash]))
+        .keccak256(ethers_1.ethers.concat([prefix, ethers_1.ethers.zeroPadValue(sender, 32), salt, bytecodeHash, inputHash]))
         .slice(26);
     return ethers_1.ethers.getAddress(addressBytes);
 }
@@ -114,8 +114,8 @@ function createAddress(sender, senderNonce) {
     const addressBytes = ethers_1.ethers
         .keccak256(ethers_1.ethers.concat([
         prefix,
-        ethers_1.ethers.zeroPadBytes(sender, 32),
-        ethers_1.ethers.zeroPadBytes(ethers_1.ethers.toBeHex(senderNonce), 32),
+        ethers_1.ethers.zeroPadValue(sender, 32),
+        ethers_1.ethers.zeroPadValue(ethers_1.ethers.toBeHex(senderNonce), 32),
     ]))
         .slice(26);
     return ethers_1.ethers.getAddress(addressBytes);
diff --git a/src/utils.ts b/src/utils.ts
index 7587828b6213e30aeb2f0bccca804b270fed93c3..107df6ba282bdda90f2e5ad30a2ce6249cdb2618 100644
--- a/src/utils.ts
+++ b/src/utils.ts
@@ -121,7 +121,7 @@ export function create2Address(
     const inputHash = ethers.keccak256(input);
     const addressBytes = ethers
         .keccak256(
-            ethers.concat([prefix, ethers.zeroPadBytes(sender, 32), salt, bytecodeHash, inputHash]),
+            ethers.concat([prefix, ethers.zeroPadValue(sender, 32), salt, bytecodeHash, inputHash]),
         )
         .slice(26);
     return ethers.getAddress(addressBytes);
@@ -133,8 +133,8 @@ export function createAddress(sender: Address, senderNonce: BigNumberish) {
         .keccak256(
             ethers.concat([
                 prefix,
-                ethers.zeroPadBytes(sender, 32),
-                ethers.zeroPadBytes(ethers.toBeHex(senderNonce), 32),
+                ethers.zeroPadValue(sender, 32),
+                ethers.zeroPadValue(ethers.toBeHex(senderNonce), 32),
             ]),
         )
         .slice(26);
