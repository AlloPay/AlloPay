diff --git a/lib/module/components/Typography/Text.js b/lib/module/components/Typography/Text.js
index 0f74223bec974f8460cd69740a8f9b89142b9201..2549639deab9e799fae1667c6a48dff484059858 100644
--- a/lib/module/components/Typography/Text.js
+++ b/lib/module/components/Typography/Text.js
@@ -1,6 +1,8 @@
 function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
 import * as React from 'react';
 import { I18nManager, StyleSheet, Text as NativeText } from 'react-native';
+import AnimatedText from './AnimatedText';
+import StyledText from './v2/StyledText';
 import { useInternalTheme } from '../../core/theming';
 import { forwardRef } from '../../utils/forwardRef';
 // @component-group Typography
@@ -61,7 +63,10 @@ const Text = (_ref, ref) => {
   if (theme.isV3 && variant) {
     let font = theme.fonts[variant];
     let textStyle = [font, style];
-    if (rest.children && typeof rest.children === 'object' && 'props' in rest.children) {
+    if (React.isValidElement(rest.children) &&
+      (rest.children.type === Component ||
+        rest.children.type === AnimatedText ||
+        rest.children.type === StyledText)) {
       const {
         props
       } = rest.children;
diff --git a/src/components/Typography/Text.tsx b/src/components/Typography/Text.tsx
index 0492751d8e6199dc75f493c036dc51fe2f679bab..78d2949a4301d844fc538795e5071d46883ca4d0 100644
--- a/src/components/Typography/Text.tsx
+++ b/src/components/Typography/Text.tsx
@@ -7,7 +7,9 @@ import {
   TextStyle,
 } from 'react-native';
 
+import AnimatedText from './AnimatedText';
 import type { VariantProp } from './types';
+import StyledText from './v2/StyledText';
 import { useInternalTheme } from '../../core/theming';
 import type { ThemeProp } from '../../types';
 import { forwardRef } from '../../utils/forwardRef';
@@ -96,9 +98,10 @@ const Text = (
     let textStyle = [font, style];
 
     if (
-      rest.children &&
-      typeof rest.children === 'object' &&
-      'props' in rest.children
+      React.isValidElement(rest.children) &&
+      (rest.children.type === Component ||
+        rest.children.type === AnimatedText ||
+        rest.children.type === StyledText)
     ) {
       const { props } = rest.children;
 
